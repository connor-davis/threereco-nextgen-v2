// This file is auto-generated by @hey-api/openapi-ts
import { z } from 'zod';

export const zAddress = z.object({
  city: z.string().min(1),
  country: z.string().min(1),
  createdAt: z.iso.datetime(),
  id: z.uuid(),
  lineOne: z.string().min(1),
  lineTwo: z.optional(z.union([z.string(), z.null()])),
  postalCode: z.int(),
  state: z.string().min(1),
  updatedAt: z.iso.datetime(),
});

export const zAuditLog = z.object({
  createdAt: z.iso.datetime(),
  data: z.record(z.string(), z.unknown()),
  id: z.uuid(),
  objectId: z.uuid(),
  operationType: z.string().min(1),
  tableName: z.string().min(1),
  updatedAt: z.iso.datetime(),
  user: z.optional(
    z.object({
      createdAt: z.iso.datetime(),
      email: z.email().min(1),
      id: z.uuid(),
      image: z.optional(z.string()),
      jobTitle: z.optional(z.string()),
      mfaEnabled: z.boolean().default(false),
      mfaVerified: z.boolean().default(false),
      modifiedById: z.uuid(),
      name: z.optional(z.string()),
      phone: z.optional(z.string()),
      primaryOrganizationId: z.optional(z.uuid()),
      tags: z.array(z.string()),
      updatedAt: z.iso.datetime(),
    })
  ),
  userId: z.uuid(),
});

export const zAvailablePermission = z.object({
  description: z.string(),
  value: z.string(),
});

export const zAvailablePermissionGroup = z.object({
  name: z.string().min(1),
  permissions: z.array(
    z.object({
      description: z.string(),
      value: z.string(),
    })
  ),
});

export const zBankDetails = z.object({
  accountHolder: z.string().min(1),
  accountNumber: z.string().min(1),
  bankName: z.string().min(1),
  branchCode: z.string().min(1),
  createdAt: z.iso.datetime(),
  id: z.uuid(),
  updatedAt: z.iso.datetime(),
});

export const zCreateAddressPayload = z.object({
  city: z.string().min(1),
  country: z.string().min(1),
  lineOne: z.string().min(1),
  lineTwo: z.optional(z.union([z.string(), z.null()])),
  postalCode: z.int(),
  state: z.string().min(1),
});

export const zCreateBankDetailsPayload = z.object({
  accountHolder: z.string().min(1),
  accountNumber: z.string().min(1),
  bankName: z.string().min(1),
  branchCode: z.string().min(1),
});

export const zCreateMaterialPayload = z.object({
  carbonFactor: z.string(),
  gwCode: z.string(),
  name: z.string(),
});

export const zCreateOrganizationPayload = z.object({
  domain: z.optional(z.string().min(1)),
  name: z.optional(z.string().min(1)),
  ownerId: z.optional(z.uuid()),
});

export const zCreateProductPayload = z.object({
  materials: z.optional(z.array(z.uuid())),
  name: z.string(),
  value: z.number().gte(0),
});

export const zCreateRolePayload = z.object({
  description: z.optional(z.union([z.string(), z.null()])),
  name: z.optional(z.string().min(1)),
  permissions: z.optional(z.array(z.string())).default([]),
});

export const zCreateTransactionPayload = z.object({
  amount: z.number().gte(0),
  products: z.optional(z.array(z.uuid())),
  sellerId: z.uuid(),
  type: z.string(),
  weight: z.number().gte(0),
});

export const zCreateUserPayload = z.object({
  address: z.object({
    city: z.string().min(1),
    country: z.string().min(1),
    lineOne: z.string().min(1),
    lineTwo: z.optional(z.union([z.string(), z.null()])),
    postalCode: z.int(),
    state: z.string().min(1),
  }),
  bankDetails: z.optional(
    z.object({
      accountHolder: z.optional(z.string().min(1)),
      accountNumber: z.optional(z.string().min(1)),
      bankName: z.optional(z.string().min(1)),
      branchCode: z.optional(z.string().min(1)),
    })
  ),
  email: z.email().min(1),
  jobTitle: z.optional(z.union([z.string(), z.null()])),
  name: z.union([z.string(), z.null()]),
  password: z.string().min(8),
  phone: z.optional(z.union([z.string(), z.null()])),
  roles: z.optional(z.union([z.array(z.uuid()), z.null()])),
  tags: z.optional(z.union([z.array(z.string()), z.null()])),
});

export const zErrorResponse = z.object({
  error: z.optional(z.string()).default('Bad Request'),
  message: z
    .optional(z.string())
    .default(
      'The request could not be understood or was missing required parameters.'
    ),
});

export const zLoginPayload = z.object({
  emailOrPhone: z.email(),
  password: z.string().min(6).max(100),
});

export const zMaterial = z.object({
  carbonFactor: z.string(),
  createdAt: z.iso.datetime(),
  gwCode: z.string(),
  id: z.uuid(),
  modifiedBy: z.optional(
    z.object({
      createdAt: z.iso.datetime(),
      email: z.email().min(1),
      id: z.uuid(),
      image: z.optional(z.string()),
      jobTitle: z.optional(z.string()),
      mfaEnabled: z.boolean().default(false),
      mfaVerified: z.boolean().default(false),
      modifiedById: z.uuid(),
      name: z.optional(z.string()),
      phone: z.optional(z.string()),
      primaryOrganizationId: z.optional(z.uuid()),
      tags: z.array(z.string()),
      updatedAt: z.iso.datetime(),
    })
  ),
  modifiedById: z.uuid(),
  name: z.string(),
  updatedAt: z.iso.datetime(),
});

export const zMfaVerifyPayload = z.object({
  code: z.optional(z.string()),
});

export const zNotification = z.object({
  action: z.optional(
    z.object({
      link: z.optional(z.url()),
      linkText: z.optional(z.string()),
    })
  ),
  closed: z.boolean(),
  createdAt: z.iso.datetime(),
  id: z.uuid(),
  message: z.string(),
  modifiedBy: z.optional(
    z.object({
      createdAt: z.iso.datetime(),
      email: z.email().min(1),
      id: z.uuid(),
      image: z.optional(z.string()),
      jobTitle: z.optional(z.string()),
      mfaEnabled: z.boolean().default(false),
      mfaVerified: z.boolean().default(false),
      modifiedById: z.uuid(),
      name: z.optional(z.string()),
      phone: z.optional(z.string()),
      primaryOrganizationId: z.optional(z.uuid()),
      tags: z.array(z.string()),
      updatedAt: z.iso.datetime(),
    })
  ),
  modifiedById: z.uuid(),
  title: z.string(),
  updatedAt: z.iso.datetime(),
  userId: z.uuid(),
});

export const zOrganization = z.object({
  createdAt: z.iso.datetime(),
  domain: z.string().min(1),
  id: z.uuid(),
  modifiedBy: z.optional(
    z.object({
      createdAt: z.iso.datetime(),
      email: z.email().min(1),
      id: z.uuid(),
      image: z.optional(z.string()),
      jobTitle: z.optional(z.string()),
      mfaEnabled: z.boolean().default(false),
      mfaVerified: z.boolean().default(false),
      modifiedById: z.uuid(),
      name: z.optional(z.string()),
      phone: z.optional(z.string()),
      primaryOrganizationId: z.optional(z.uuid()),
      tags: z.array(z.string()),
      updatedAt: z.iso.datetime(),
    })
  ),
  modifiedById: z.uuid(),
  name: z.string().min(1),
  owner: z.object({
    createdAt: z.iso.datetime(),
    email: z.email().min(1),
    id: z.uuid(),
    image: z.optional(z.string()),
    jobTitle: z.optional(z.string()),
    mfaEnabled: z.boolean().default(false),
    mfaVerified: z.boolean().default(false),
    modifiedById: z.uuid(),
    name: z.optional(z.string()),
    phone: z.optional(z.string()),
    primaryOrganizationId: z.optional(z.uuid()),
    tags: z.array(z.string()),
    updatedAt: z.iso.datetime(),
  }),
  ownerId: z.uuid(),
  updatedAt: z.iso.datetime(),
});

export const zProduct = z.object({
  createdAt: z.iso.datetime(),
  id: z.uuid(),
  materials: z.array(
    z.object({
      carbonFactor: z.string(),
      createdAt: z.iso.datetime(),
      gwCode: z.string(),
      id: z.uuid(),
      modifiedBy: z.optional(
        z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      modifiedById: z.uuid(),
      name: z.string(),
      updatedAt: z.iso.datetime(),
    })
  ),
  modifiedBy: z.optional(
    z.object({
      createdAt: z.iso.datetime(),
      email: z.email().min(1),
      id: z.uuid(),
      image: z.optional(z.string()),
      jobTitle: z.optional(z.string()),
      mfaEnabled: z.boolean().default(false),
      mfaVerified: z.boolean().default(false),
      modifiedById: z.uuid(),
      name: z.optional(z.string()),
      phone: z.optional(z.string()),
      primaryOrganizationId: z.optional(z.uuid()),
      tags: z.array(z.string()),
      updatedAt: z.iso.datetime(),
    })
  ),
  modifiedById: z.uuid(),
  name: z.string(),
  updatedAt: z.iso.datetime(),
  value: z.number().gte(0),
});

export const zRole = z.object({
  createdAt: z.iso.datetime(),
  description: z.string(),
  id: z.uuid(),
  modifiedBy: z.optional(
    z.object({
      createdAt: z.iso.datetime(),
      email: z.email().min(1),
      id: z.uuid(),
      image: z.optional(z.string()),
      jobTitle: z.optional(z.string()),
      mfaEnabled: z.boolean().default(false),
      mfaVerified: z.boolean().default(false),
      modifiedById: z.uuid(),
      name: z.optional(z.string()),
      phone: z.optional(z.string()),
      primaryOrganizationId: z.optional(z.uuid()),
      tags: z.array(z.string()),
      updatedAt: z.iso.datetime(),
    })
  ),
  modifiedById: z.uuid(),
  name: z.string().min(1),
  permissions: z.array(z.string()).default([]),
  updatedAt: z.iso.datetime(),
});

export const zSignUpPayload = z.object({
  email: z.optional(z.email()),
  name: z.string().min(2).max(100),
  password: z.string().min(6).max(100),
  phone: z.optional(z.string().min(10).max(15)),
});

export const zSuccessResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zTransaction = z.object({
  amount: z.number().gte(0),
  buyerId: z.uuid(),
  buyerType: z.string(),
  createdAt: z.iso.datetime(),
  id: z.uuid(),
  modifiedBy: z.optional(
    z.object({
      createdAt: z.iso.datetime(),
      email: z.email().min(1),
      id: z.uuid(),
      image: z.optional(z.string()),
      jobTitle: z.optional(z.string()),
      mfaEnabled: z.boolean().default(false),
      mfaVerified: z.boolean().default(false),
      modifiedById: z.uuid(),
      name: z.optional(z.string()),
      phone: z.optional(z.string()),
      primaryOrganizationId: z.optional(z.uuid()),
      tags: z.array(z.string()),
      updatedAt: z.iso.datetime(),
    })
  ),
  modifiedById: z.optional(z.uuid()),
  products: z.array(
    z.object({
      createdAt: z.iso.datetime(),
      id: z.uuid(),
      materials: z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      modifiedBy: z.optional(
        z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      modifiedById: z.uuid(),
      name: z.string(),
      updatedAt: z.iso.datetime(),
      value: z.number().gte(0),
    })
  ),
  sellerAccepted: z.boolean(),
  sellerDeclined: z.boolean(),
  sellerId: z.uuid(),
  sellerType: z.string(),
  type: z.string(),
  updatedAt: z.iso.datetime(),
  weight: z.number().gte(0),
});

export const zUpdateAddressPayload = z.object({
  city: z.optional(z.union([z.string().min(1), z.null()])),
  country: z.optional(z.union([z.string().min(1), z.null()])),
  lineOne: z.optional(z.union([z.string().min(1), z.null()])),
  lineTwo: z.optional(z.union([z.string(), z.null()])),
  postalCode: z.optional(z.union([z.int(), z.null()])),
  state: z.optional(z.union([z.string().min(1), z.null()])),
});

export const zUpdateBankDetailsPayload = z.object({
  accountHolder: z.optional(z.union([z.string().min(1), z.null()])),
  accountNumber: z.optional(z.union([z.string().min(1), z.null()])),
  bankName: z.optional(z.union([z.string().min(1), z.null()])),
  branchCode: z.optional(z.union([z.string().min(1), z.null()])),
});

export const zUpdateMaterialPayload = z.object({
  carbonFactor: z.optional(z.union([z.string(), z.null()])),
  gwCode: z.optional(z.union([z.string(), z.null()])),
  name: z.optional(z.union([z.string(), z.null()])),
});

export const zUpdateOrganizationPayload = z.object({
  domain: z.optional(z.union([z.string().min(1), z.null()])),
  name: z.optional(z.union([z.string().min(1), z.null()])),
  ownerId: z.optional(z.union([z.uuid(), z.null()])),
});

export const zUpdateProductPayload = z.object({
  materials: z.optional(z.array(z.uuid())),
  name: z.optional(z.union([z.string(), z.null()])),
  value: z.optional(z.union([z.number().gte(0), z.null()])),
});

export const zUpdateRolePayload = z.object({
  description: z.optional(z.union([z.string(), z.null()])),
  name: z.optional(z.union([z.string().min(1), z.null()])),
  permissions: z.optional(z.array(z.string())).default([]),
});

export const zUpdateTransactionPayload = z.object({
  amount: z.optional(z.union([z.number().gte(0), z.null()])),
  products: z.optional(z.array(z.uuid())),
  sellerAccepted: z.optional(z.union([z.boolean(), z.null()])),
  sellerDeclined: z.optional(z.union([z.boolean(), z.null()])),
  sellerId: z.optional(z.union([z.uuid(), z.null()])),
  type: z.optional(z.union([z.string(), z.null()])),
  weight: z.optional(z.union([z.number().gte(0), z.null()])),
});

export const zUpdateUserPayload = z.object({
  address: z.optional(
    z.object({
      city: z.optional(z.union([z.string().min(1), z.null()])),
      country: z.optional(z.union([z.string().min(1), z.null()])),
      lineOne: z.optional(z.union([z.string().min(1), z.null()])),
      lineTwo: z.optional(z.union([z.string(), z.null()])),
      postalCode: z.optional(z.union([z.int(), z.null()])),
      state: z.optional(z.union([z.string().min(1), z.null()])),
    })
  ),
  bankDetails: z.optional(
    z.object({
      accountHolder: z.optional(z.union([z.string().min(1), z.null()])),
      accountNumber: z.optional(z.union([z.string().min(1), z.null()])),
      bankName: z.optional(z.union([z.string().min(1), z.null()])),
      branchCode: z.optional(z.union([z.string().min(1), z.null()])),
    })
  ),
  email: z.optional(z.union([z.email().min(1), z.null()])),
  jobTitle: z.optional(z.union([z.string(), z.null()])),
  name: z.optional(z.union([z.string(), z.null()])),
  organizations: z.optional(z.union([z.array(z.uuid()), z.null()])),
  phone: z.optional(z.union([z.string(), z.null()])),
  primaryOrganizationId: z.optional(z.union([z.uuid(), z.null()])),
  roles: z.optional(z.union([z.array(z.uuid()), z.null()])),
  tags: z.optional(z.union([z.array(z.string()), z.null()])),
});

export const zUser = z.object({
  address: z.optional(
    z.object({
      city: z.string().min(1),
      country: z.string().min(1),
      createdAt: z.iso.datetime(),
      id: z.uuid(),
      lineOne: z.string().min(1),
      lineTwo: z.optional(z.union([z.string(), z.null()])),
      postalCode: z.int(),
      state: z.string().min(1),
      updatedAt: z.iso.datetime(),
    })
  ),
  bankDetails: z.optional(
    z.object({
      accountHolder: z.string().min(1),
      accountNumber: z.string().min(1),
      bankName: z.string().min(1),
      branchCode: z.string().min(1),
      createdAt: z.iso.datetime(),
      id: z.uuid(),
      updatedAt: z.iso.datetime(),
    })
  ),
  createdAt: z.iso.datetime(),
  email: z.email().min(1),
  id: z.uuid(),
  image: z.optional(z.string()),
  jobTitle: z.optional(z.string()),
  mfaEnabled: z.boolean().default(false),
  mfaVerified: z.boolean().default(false),
  modifiedBy: z.optional(
    z.object({
      createdAt: z.iso.datetime(),
      email: z.email().min(1),
      id: z.uuid(),
      image: z.optional(z.string()),
      jobTitle: z.optional(z.string()),
      mfaEnabled: z.boolean().default(false),
      mfaVerified: z.boolean().default(false),
      modifiedById: z.uuid(),
      name: z.optional(z.string()),
      phone: z.optional(z.string()),
      primaryOrganizationId: z.optional(z.uuid()),
      tags: z.array(z.string()),
      updatedAt: z.iso.datetime(),
    })
  ),
  modifiedById: z.uuid(),
  name: z.optional(z.string()),
  organizations: z.optional(
    z.array(
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      })
    )
  ),
  phone: z.optional(z.string()),
  primaryOrganizationId: z.optional(z.uuid()),
  roles: z.optional(
    z.array(
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      })
    )
  ),
  tags: z.array(z.string()),
  updatedAt: z.iso.datetime(),
});

export const zGetApiAuditlogsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      page: z.optional(z.int()),
      search: z.optional(z.string()),
    })
  ),
});

/**
 * The list of auditlogs for the specified page and search query.
 */
export const zGetApiAuditlogsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zGetApiAuditlogsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.string(),
  }),
  query: z.optional(z.never()),
});

/**
 * The auditlog was retrieved successfully.
 */
export const zGetApiAuditlogsByIdResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zGetApiAuthenticationCheckData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * Successful authentication check.
 */
export const zGetApiAuthenticationCheckResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPostApiAuthenticationLoginData = z.object({
  body: z.object({
    emailOrPhone: z.email(),
    password: z.string().min(6).max(100),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zPostApiAuthenticationLogoutData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zGetApiAuthenticationMfaEnableData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zPostApiAuthenticationMfaVerifyData = z.object({
  body: z.object({
    code: z.optional(z.string()),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zGetApiAuthenticationOrganizationsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * Successful organizations retrieval.
 */
export const zGetApiAuthenticationOrganizationsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zGetApiAuthenticationPermissionsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * Successful permissions retrieval.
 */
export const zGetApiAuthenticationPermissionsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPostApiAuthenticationSignUpData = z.object({
  body: z.object({
    email: z.optional(z.email()),
    name: z.string().min(2).max(100),
    password: z.string().min(6).max(100),
    phone: z.optional(z.string().min(10).max(15)),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zGetApiCollectionsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      page: z.optional(z.int()),
      search: z.optional(z.string()),
    })
  ),
});

/**
 * The list of collections for the specified page and search query.
 */
export const zGetApiCollectionsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zGetApiMaterialsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      page: z.optional(z.int()),
      search: z.optional(z.string()),
    })
  ),
});

/**
 * The list of materials for the specified page and search query.
 */
export const zGetApiMaterialsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPostApiMaterialsData = z.object({
  body: z.object({
    carbonFactor: z.string(),
    gwCode: z.string(),
    name: z.string(),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zDeleteApiMaterialsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiMaterialsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.string(),
  }),
  query: z.optional(z.never()),
});

/**
 * The material was retrieved successfully.
 */
export const zGetApiMaterialsByIdResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPutApiMaterialsByIdData = z.object({
  body: z.object({
    carbonFactor: z.optional(z.union([z.string(), z.null()])),
    gwCode: z.optional(z.union([z.string(), z.null()])),
    name: z.optional(z.union([z.string(), z.null()])),
  }),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiNotificationsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      page: z.optional(z.int()),
      search: z.optional(z.string()),
    })
  ),
});

/**
 * The list of notifications for the specified page and search query.
 */
export const zGetApiNotificationsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPostApiNotificationsData = z.object({
  body: z.object({
    action: z.optional(
      z.object({
        link: z.optional(z.url()),
        linkText: z.optional(z.string()),
      })
    ),
    closed: z.optional(z.boolean()),
    message: z.optional(z.string()),
    title: z.optional(z.string()),
    userId: z.optional(z.uuid()),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zDeleteApiNotificationsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiNotificationsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.string(),
  }),
  query: z.optional(z.never()),
});

/**
 * The notification was retrieved successfully.
 */
export const zGetApiNotificationsByIdResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPutApiNotificationsByIdData = z.object({
  body: z.object({
    action: z.optional(
      z.union([
        z.object({
          link: z.optional(z.url()),
          linkText: z.optional(z.string()),
        }),
        z.null(),
      ])
    ),
    closed: z.optional(z.union([z.boolean(), z.null()])),
    message: z.optional(z.union([z.string(), z.null()])),
    title: z.optional(z.union([z.string(), z.null()])),
    userId: z.optional(z.union([z.uuid(), z.null()])),
  }),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiOrganizationsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      page: z.optional(z.int()),
      search: z.optional(z.string()),
    })
  ),
});

/**
 * The list of organizations for the specified page and search query.
 */
export const zGetApiOrganizationsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPostApiOrganizationsData = z.object({
  body: z.object({
    domain: z.optional(z.string().min(1)),
    name: z.optional(z.string().min(1)),
    ownerId: z.optional(z.uuid()),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zPostApiOrganizationsInvitesSendByEmailData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    email: z.string(),
  }),
  query: z.optional(z.never()),
});

export const zDeleteApiOrganizationsUsersByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zDeleteApiOrganizationsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiOrganizationsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.string(),
  }),
  query: z.optional(z.never()),
});

/**
 * The organization was retrieved successfully.
 */
export const zGetApiOrganizationsByIdResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPutApiOrganizationsByIdData = z.object({
  body: z.object({
    domain: z.optional(z.union([z.string().min(1), z.null()])),
    name: z.optional(z.union([z.string().min(1), z.null()])),
    ownerId: z.optional(z.union([z.uuid(), z.null()])),
  }),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zPostApiOrganizationsByIdInvitesAcceptData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zGetApiProductsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      page: z.optional(z.int()),
      search: z.optional(z.string()),
    })
  ),
});

/**
 * The list of products for the specified page and search query.
 */
export const zGetApiProductsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPostApiProductsData = z.object({
  body: z.object({
    materials: z.optional(z.array(z.uuid())),
    name: z.string(),
    value: z.number().gte(0),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zDeleteApiProductsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiProductsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.string(),
  }),
  query: z.optional(z.never()),
});

/**
 * The product was retrieved successfully.
 */
export const zGetApiProductsByIdResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPutApiProductsByIdData = z.object({
  body: z.object({
    materials: z.optional(z.array(z.uuid())),
    name: z.optional(z.union([z.string(), z.null()])),
    value: z.optional(z.union([z.number().gte(0), z.null()])),
  }),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiRolesData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      page: z.optional(z.int()),
      search: z.optional(z.string()),
    })
  ),
});

/**
 * The list of roles for the specified page and search query.
 */
export const zGetApiRolesResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPostApiRolesData = z.object({
  body: z.object({
    description: z.optional(z.union([z.string(), z.null()])),
    name: z.optional(z.string().min(1)),
    permissions: z.optional(z.array(z.string())).default([]),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zGetApiRolesAvailablePermissionsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * Successful retrieval of available permissions.
 */
export const zGetApiRolesAvailablePermissionsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zDeleteApiRolesByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiRolesByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.string(),
  }),
  query: z.optional(z.never()),
});

/**
 * The role was retrieved successfully.
 */
export const zGetApiRolesByIdResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPutApiRolesByIdData = z.object({
  body: z.object({
    description: z.optional(z.union([z.string(), z.null()])),
    name: z.optional(z.union([z.string().min(1), z.null()])),
    permissions: z.optional(z.array(z.string())).default([]),
  }),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiTransactionsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      page: z.optional(z.int()),
      search: z.optional(z.string()),
    })
  ),
});

/**
 * The list of transactions for the specified page and search query.
 */
export const zGetApiTransactionsResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPostApiTransactionsData = z.object({
  body: z.object({
    amount: z.number().gte(0),
    products: z.optional(z.array(z.uuid())),
    sellerId: z.uuid(),
    type: z.string(),
    weight: z.number().gte(0),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zDeleteApiTransactionsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiTransactionsByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.string(),
  }),
  query: z.optional(z.never()),
});

/**
 * The transaction was retrieved successfully.
 */
export const zGetApiTransactionsByIdResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPutApiTransactionsByIdData = z.object({
  body: z.object({
    amount: z.optional(z.union([z.number().gte(0), z.null()])),
    products: z.optional(z.array(z.uuid())),
    sellerAccepted: z.optional(z.union([z.boolean(), z.null()])),
    sellerDeclined: z.optional(z.union([z.boolean(), z.null()])),
    sellerId: z.optional(z.union([z.uuid(), z.null()])),
    type: z.optional(z.union([z.string(), z.null()])),
    weight: z.optional(z.union([z.number().gte(0), z.null()])),
  }),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiUsersData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      page: z.optional(z.int()),
      search: z.optional(z.string()),
    })
  ),
});

/**
 * The list of users for the specified page and search query.
 */
export const zGetApiUsersResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPostApiUsersData = z.object({
  body: z.object({
    address: z.object({
      city: z.string().min(1),
      country: z.string().min(1),
      lineOne: z.string().min(1),
      lineTwo: z.optional(z.union([z.string(), z.null()])),
      postalCode: z.int(),
      state: z.string().min(1),
    }),
    bankDetails: z.optional(
      z.object({
        accountHolder: z.optional(z.string().min(1)),
        accountNumber: z.optional(z.string().min(1)),
        bankName: z.optional(z.string().min(1)),
        branchCode: z.optional(z.string().min(1)),
      })
    ),
    email: z.email().min(1),
    jobTitle: z.optional(z.union([z.string(), z.null()])),
    name: z.union([z.string(), z.null()]),
    password: z.string().min(8),
    phone: z.optional(z.union([z.string(), z.null()])),
    roles: z.optional(z.union([z.array(z.uuid()), z.null()])),
    tags: z.optional(z.union([z.array(z.string()), z.null()])),
  }),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zDeleteApiUsersByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});

export const zGetApiUsersByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    id: z.string(),
  }),
  query: z.optional(z.never()),
});

/**
 * The user was retrieved successfully.
 */
export const zGetApiUsersByIdResponse = z.object({
  item: z.optional(
    z.union([
      z.object({
        address: z.optional(
          z.object({
            city: z.string().min(1),
            country: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            lineOne: z.string().min(1),
            lineTwo: z.optional(z.union([z.string(), z.null()])),
            postalCode: z.int(),
            state: z.string().min(1),
            updatedAt: z.iso.datetime(),
          })
        ),
        bankDetails: z.optional(
          z.object({
            accountHolder: z.string().min(1),
            accountNumber: z.string().min(1),
            bankName: z.string().min(1),
            branchCode: z.string().min(1),
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            updatedAt: z.iso.datetime(),
          })
        ),
        createdAt: z.iso.datetime(),
        email: z.email().min(1),
        id: z.uuid(),
        image: z.optional(z.string()),
        jobTitle: z.optional(z.string()),
        mfaEnabled: z.boolean().default(false),
        mfaVerified: z.boolean().default(false),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.optional(z.string()),
        organizations: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              domain: z.string().min(1),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              owner: z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              }),
              ownerId: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        phone: z.optional(z.string()),
        primaryOrganizationId: z.optional(z.uuid()),
        roles: z.optional(
          z.array(
            z.object({
              createdAt: z.iso.datetime(),
              description: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string().min(1),
              permissions: z.array(z.string()).default([]),
              updatedAt: z.iso.datetime(),
            })
          )
        ),
        tags: z.array(z.string()),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        domain: z.string().min(1),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        owner: z.object({
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        }),
        ownerId: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        description: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string().min(1),
        permissions: z.array(z.string()).default([]),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        data: z.record(z.string(), z.unknown()),
        id: z.uuid(),
        objectId: z.uuid(),
        operationType: z.string().min(1),
        tableName: z.string().min(1),
        updatedAt: z.iso.datetime(),
        user: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        userId: z.uuid(),
      }),
      z.object({
        carbonFactor: z.string(),
        createdAt: z.iso.datetime(),
        gwCode: z.string(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        materials: z.array(
          z.object({
            carbonFactor: z.string(),
            createdAt: z.iso.datetime(),
            gwCode: z.string(),
            id: z.uuid(),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        name: z.string(),
        updatedAt: z.iso.datetime(),
        value: z.number().gte(0),
      }),
      z.object({
        amount: z.number().gte(0),
        buyerId: z.uuid(),
        buyerType: z.string(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.optional(z.uuid()),
        products: z.array(
          z.object({
            createdAt: z.iso.datetime(),
            id: z.uuid(),
            materials: z.array(
              z.object({
                carbonFactor: z.string(),
                createdAt: z.iso.datetime(),
                gwCode: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string(),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedBy: z.optional(
              z.object({
                createdAt: z.iso.datetime(),
                email: z.email().min(1),
                id: z.uuid(),
                image: z.optional(z.string()),
                jobTitle: z.optional(z.string()),
                mfaEnabled: z.boolean().default(false),
                mfaVerified: z.boolean().default(false),
                modifiedById: z.uuid(),
                name: z.optional(z.string()),
                phone: z.optional(z.string()),
                primaryOrganizationId: z.optional(z.uuid()),
                tags: z.array(z.string()),
                updatedAt: z.iso.datetime(),
              })
            ),
            modifiedById: z.uuid(),
            name: z.string(),
            updatedAt: z.iso.datetime(),
            value: z.number().gte(0),
          })
        ),
        sellerAccepted: z.boolean(),
        sellerDeclined: z.boolean(),
        sellerId: z.uuid(),
        sellerType: z.string(),
        type: z.string(),
        updatedAt: z.iso.datetime(),
        weight: z.number().gte(0),
      }),
      z.object({
        action: z.optional(
          z.object({
            link: z.optional(z.url()),
            linkText: z.optional(z.string()),
          })
        ),
        closed: z.boolean(),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        message: z.string(),
        modifiedBy: z.optional(
          z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          })
        ),
        modifiedById: z.uuid(),
        title: z.string(),
        updatedAt: z.iso.datetime(),
        userId: z.uuid(),
      }),
      z.object({
        name: z.string().min(1),
        permissions: z.array(
          z.object({
            description: z.string(),
            value: z.string(),
          })
        ),
      }),
      z.object({
        city: z.string().min(1),
        country: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        lineOne: z.string().min(1),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.int(),
        state: z.string().min(1),
        updatedAt: z.iso.datetime(),
      }),
      z.object({
        accountHolder: z.string().min(1),
        accountNumber: z.string().min(1),
        bankName: z.string().min(1),
        branchCode: z.string().min(1),
        createdAt: z.iso.datetime(),
        id: z.uuid(),
        updatedAt: z.iso.datetime(),
      }),
    ])
  ),
  items: z.optional(
    z.union([
      z.array(
        z.object({
          address: z.optional(
            z.object({
              city: z.string().min(1),
              country: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              lineOne: z.string().min(1),
              lineTwo: z.optional(z.union([z.string(), z.null()])),
              postalCode: z.int(),
              state: z.string().min(1),
              updatedAt: z.iso.datetime(),
            })
          ),
          bankDetails: z.optional(
            z.object({
              accountHolder: z.string().min(1),
              accountNumber: z.string().min(1),
              bankName: z.string().min(1),
              branchCode: z.string().min(1),
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              updatedAt: z.iso.datetime(),
            })
          ),
          createdAt: z.iso.datetime(),
          email: z.email().min(1),
          id: z.uuid(),
          image: z.optional(z.string()),
          jobTitle: z.optional(z.string()),
          mfaEnabled: z.boolean().default(false),
          mfaVerified: z.boolean().default(false),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.optional(z.string()),
          organizations: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                domain: z.string().min(1),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                owner: z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                }),
                ownerId: z.uuid(),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          phone: z.optional(z.string()),
          primaryOrganizationId: z.optional(z.uuid()),
          roles: z.optional(
            z.array(
              z.object({
                createdAt: z.iso.datetime(),
                description: z.string(),
                id: z.uuid(),
                modifiedBy: z.optional(
                  z.object({
                    createdAt: z.iso.datetime(),
                    email: z.email().min(1),
                    id: z.uuid(),
                    image: z.optional(z.string()),
                    jobTitle: z.optional(z.string()),
                    mfaEnabled: z.boolean().default(false),
                    mfaVerified: z.boolean().default(false),
                    modifiedById: z.uuid(),
                    name: z.optional(z.string()),
                    phone: z.optional(z.string()),
                    primaryOrganizationId: z.optional(z.uuid()),
                    tags: z.array(z.string()),
                    updatedAt: z.iso.datetime(),
                  })
                ),
                modifiedById: z.uuid(),
                name: z.string().min(1),
                permissions: z.array(z.string()).default([]),
                updatedAt: z.iso.datetime(),
              })
            )
          ),
          tags: z.array(z.string()),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          domain: z.string().min(1),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          owner: z.object({
            createdAt: z.iso.datetime(),
            email: z.email().min(1),
            id: z.uuid(),
            image: z.optional(z.string()),
            jobTitle: z.optional(z.string()),
            mfaEnabled: z.boolean().default(false),
            mfaVerified: z.boolean().default(false),
            modifiedById: z.uuid(),
            name: z.optional(z.string()),
            phone: z.optional(z.string()),
            primaryOrganizationId: z.optional(z.uuid()),
            tags: z.array(z.string()),
            updatedAt: z.iso.datetime(),
          }),
          ownerId: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          description: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string().min(1),
          permissions: z.array(z.string()).default([]),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          data: z.record(z.string(), z.unknown()),
          id: z.uuid(),
          objectId: z.uuid(),
          operationType: z.string().min(1),
          tableName: z.string().min(1),
          updatedAt: z.iso.datetime(),
          user: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          carbonFactor: z.string(),
          createdAt: z.iso.datetime(),
          gwCode: z.string(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          materials: z.array(
            z.object({
              carbonFactor: z.string(),
              createdAt: z.iso.datetime(),
              gwCode: z.string(),
              id: z.uuid(),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          name: z.string(),
          updatedAt: z.iso.datetime(),
          value: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          amount: z.number().gte(0),
          buyerId: z.uuid(),
          buyerType: z.string(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.optional(z.uuid()),
          products: z.array(
            z.object({
              createdAt: z.iso.datetime(),
              id: z.uuid(),
              materials: z.array(
                z.object({
                  carbonFactor: z.string(),
                  createdAt: z.iso.datetime(),
                  gwCode: z.string(),
                  id: z.uuid(),
                  modifiedBy: z.optional(
                    z.object({
                      createdAt: z.iso.datetime(),
                      email: z.email().min(1),
                      id: z.uuid(),
                      image: z.optional(z.string()),
                      jobTitle: z.optional(z.string()),
                      mfaEnabled: z.boolean().default(false),
                      mfaVerified: z.boolean().default(false),
                      modifiedById: z.uuid(),
                      name: z.optional(z.string()),
                      phone: z.optional(z.string()),
                      primaryOrganizationId: z.optional(z.uuid()),
                      tags: z.array(z.string()),
                      updatedAt: z.iso.datetime(),
                    })
                  ),
                  modifiedById: z.uuid(),
                  name: z.string(),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedBy: z.optional(
                z.object({
                  createdAt: z.iso.datetime(),
                  email: z.email().min(1),
                  id: z.uuid(),
                  image: z.optional(z.string()),
                  jobTitle: z.optional(z.string()),
                  mfaEnabled: z.boolean().default(false),
                  mfaVerified: z.boolean().default(false),
                  modifiedById: z.uuid(),
                  name: z.optional(z.string()),
                  phone: z.optional(z.string()),
                  primaryOrganizationId: z.optional(z.uuid()),
                  tags: z.array(z.string()),
                  updatedAt: z.iso.datetime(),
                })
              ),
              modifiedById: z.uuid(),
              name: z.string(),
              updatedAt: z.iso.datetime(),
              value: z.number().gte(0),
            })
          ),
          sellerAccepted: z.boolean(),
          sellerDeclined: z.boolean(),
          sellerId: z.uuid(),
          sellerType: z.string(),
          type: z.string(),
          updatedAt: z.iso.datetime(),
          weight: z.number().gte(0),
        })
      ),
      z.array(
        z.object({
          action: z.optional(
            z.object({
              link: z.optional(z.url()),
              linkText: z.optional(z.string()),
            })
          ),
          closed: z.boolean(),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          message: z.string(),
          modifiedBy: z.optional(
            z.object({
              createdAt: z.iso.datetime(),
              email: z.email().min(1),
              id: z.uuid(),
              image: z.optional(z.string()),
              jobTitle: z.optional(z.string()),
              mfaEnabled: z.boolean().default(false),
              mfaVerified: z.boolean().default(false),
              modifiedById: z.uuid(),
              name: z.optional(z.string()),
              phone: z.optional(z.string()),
              primaryOrganizationId: z.optional(z.uuid()),
              tags: z.array(z.string()),
              updatedAt: z.iso.datetime(),
            })
          ),
          modifiedById: z.uuid(),
          title: z.string(),
          updatedAt: z.iso.datetime(),
          userId: z.uuid(),
        })
      ),
      z.array(
        z.object({
          name: z.string().min(1),
          permissions: z.array(
            z.object({
              description: z.string(),
              value: z.string(),
            })
          ),
        })
      ),
      z.array(
        z.object({
          city: z.string().min(1),
          country: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          lineOne: z.string().min(1),
          lineTwo: z.optional(z.union([z.string(), z.null()])),
          postalCode: z.int(),
          state: z.string().min(1),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(
        z.object({
          accountHolder: z.string().min(1),
          accountNumber: z.string().min(1),
          bankName: z.string().min(1),
          branchCode: z.string().min(1),
          createdAt: z.iso.datetime(),
          id: z.uuid(),
          updatedAt: z.iso.datetime(),
        })
      ),
      z.array(z.string()),
    ])
  ),
  pageDetails: z.optional(
    z.union([
      z.object({
        count: z.optional(z.int().gte(0)),
        currentPage: z.optional(z.int().gte(1)),
        nextPage: z.optional(z.int().gte(2)),
        pages: z.optional(z.int().gte(0)),
        previousPage: z.optional(z.int().gte(1)),
      }),
      z.null(),
    ])
  ),
});

export const zPutApiUsersByIdData = z.object({
  body: z.object({
    address: z.optional(
      z.object({
        city: z.optional(z.union([z.string().min(1), z.null()])),
        country: z.optional(z.union([z.string().min(1), z.null()])),
        lineOne: z.optional(z.union([z.string().min(1), z.null()])),
        lineTwo: z.optional(z.union([z.string(), z.null()])),
        postalCode: z.optional(z.union([z.int(), z.null()])),
        state: z.optional(z.union([z.string().min(1), z.null()])),
      })
    ),
    bankDetails: z.optional(
      z.object({
        accountHolder: z.optional(z.union([z.string().min(1), z.null()])),
        accountNumber: z.optional(z.union([z.string().min(1), z.null()])),
        bankName: z.optional(z.union([z.string().min(1), z.null()])),
        branchCode: z.optional(z.union([z.string().min(1), z.null()])),
      })
    ),
    email: z.optional(z.union([z.email().min(1), z.null()])),
    jobTitle: z.optional(z.union([z.string(), z.null()])),
    name: z.optional(z.union([z.string(), z.null()])),
    organizations: z.optional(z.union([z.array(z.uuid()), z.null()])),
    phone: z.optional(z.union([z.string(), z.null()])),
    primaryOrganizationId: z.optional(z.union([z.uuid(), z.null()])),
    roles: z.optional(z.union([z.array(z.uuid()), z.null()])),
    tags: z.optional(z.union([z.array(z.string()), z.null()])),
  }),
  path: z.object({
    id: z.unknown(),
  }),
  query: z.optional(z.never()),
});
