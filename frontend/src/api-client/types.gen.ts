// This file is auto-generated by @hey-api/openapi-ts

export type Address = {
  city: string;
  country: string;
  createdAt: string;
  id: string;
  lineOne: string;
  lineTwo: string | null;
  province: string;
  updatedAt: string;
  zipCode: string;
} | null;

export type Addresses = Array<{
  city: string;
  country: string;
  createdAt: string;
  id: string;
  lineOne: string;
  lineTwo: string | null;
  province: string;
  updatedAt: string;
  zipCode: string;
} | null>;

export type BankDetail = {
  accountHolder: string;
  accountNumber: string;
  bankName: string;
  branchName: string;
  createdAt: string;
  id: string;
  updatedAt: string;
} | null;

export type BankDetails = Array<{
  accountHolder: string;
  accountNumber: string;
  bankName: string;
  branchName: string;
  createdAt: string;
  id: string;
  updatedAt: string;
} | null>;

export type Collection = {
  collector: {
    activeOrganization: string;
    address: {
      city: string;
      country: string;
      createdAt: string;
      id: string;
      lineOne: string;
      lineTwo: string | null;
      province: string;
      updatedAt: string;
      zipCode: string;
    } | null;
    banReason: string | null;
    bankDetails: {
      accountHolder: string;
      accountNumber: string;
      bankName: string;
      branchName: string;
      createdAt: string;
      id: string;
      updatedAt: string;
    } | null;
    banned: boolean;
    createdAt: string;
    email: string;
    id: string;
    mfaEnabled: boolean;
    mfaVerified: boolean;
    name: string;
    phone: string;
    roles: Array<{
      createdAt: string;
      description: string | null;
      id: string;
      name: string;
      permissions: Array<string>;
      updatedAt: string;
    }>;
    type: 'standard' | 'collector' | 'business' | 'system';
    updatedAt: string;
  };
  createdAt: string;
  id: string;
  materials: Array<{
    createdAt: string;
    id: string;
    material: {
      carbonFactor: string;
      createdAt: string;
      gwCode: string;
      id: string;
      name: string;
      updatedAt: string;
      value: number;
    };
    updatedAt: string;
    weight: number;
  }>;
  organization: {
    address: {
      city: string;
      country: string;
      createdAt: string;
      id: string;
      lineOne: string;
      lineTwo: string | null;
      province: string;
      updatedAt: string;
      zipCode: string;
    } | null;
    bankDetails: {
      accountHolder: string;
      accountNumber: string;
      bankName: string;
      branchName: string;
      createdAt: string;
      id: string;
      updatedAt: string;
    } | null;
    createdAt: string;
    id: string;
    name: string;
    updatedAt: string;
  };
  updatedAt: string;
};

export type Collections = Array<{
  collector: {
    activeOrganization: string;
    address: {
      city: string;
      country: string;
      createdAt: string;
      id: string;
      lineOne: string;
      lineTwo: string | null;
      province: string;
      updatedAt: string;
      zipCode: string;
    } | null;
    banReason: string | null;
    bankDetails: {
      accountHolder: string;
      accountNumber: string;
      bankName: string;
      branchName: string;
      createdAt: string;
      id: string;
      updatedAt: string;
    } | null;
    banned: boolean;
    createdAt: string;
    email: string;
    id: string;
    mfaEnabled: boolean;
    mfaVerified: boolean;
    name: string;
    phone: string;
    roles: Array<{
      createdAt: string;
      description: string | null;
      id: string;
      name: string;
      permissions: Array<string>;
      updatedAt: string;
    }>;
    type: 'standard' | 'collector' | 'business' | 'system';
    updatedAt: string;
  };
  createdAt: string;
  id: string;
  materials: Array<{
    createdAt: string;
    id: string;
    material: {
      carbonFactor: string;
      createdAt: string;
      gwCode: string;
      id: string;
      name: string;
      updatedAt: string;
      value: number;
    };
    updatedAt: string;
    weight: number;
  }>;
  organization: {
    address: {
      city: string;
      country: string;
      createdAt: string;
      id: string;
      lineOne: string;
      lineTwo: string | null;
      province: string;
      updatedAt: string;
      zipCode: string;
    } | null;
    bankDetails: {
      accountHolder: string;
      accountNumber: string;
      bankName: string;
      branchName: string;
      createdAt: string;
      id: string;
      updatedAt: string;
    } | null;
    createdAt: string;
    id: string;
    name: string;
    updatedAt: string;
  };
  updatedAt: string;
}>;

export type ErrorResponse = {
  error?: string;
  message?: string;
};

export type LoginPayload = {
  emailOrPhone: string;
  password: string;
};

export type Material = {
  carbonFactor: string;
  createdAt: string;
  gwCode: string;
  id: string;
  name: string;
  updatedAt: string;
  value: number;
};

export type Materials = Array<{
  carbonFactor: string;
  createdAt: string;
  gwCode: string;
  id: string;
  name: string;
  updatedAt: string;
  value: number;
}>;

export type MfaVerifyPayload = {
  code?: string;
};

export type Organization = {
  address: {
    city: string;
    country: string;
    createdAt: string;
    id: string;
    lineOne: string;
    lineTwo: string | null;
    province: string;
    updatedAt: string;
    zipCode: string;
  } | null;
  bankDetails: {
    accountHolder: string;
    accountNumber: string;
    bankName: string;
    branchName: string;
    createdAt: string;
    id: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  id: string;
  name: string;
  updatedAt: string;
};

export type Organizations = Array<{
  address: {
    city: string;
    country: string;
    createdAt: string;
    id: string;
    lineOne: string;
    lineTwo: string | null;
    province: string;
    updatedAt: string;
    zipCode: string;
  } | null;
  bankDetails: {
    accountHolder: string;
    accountNumber: string;
    bankName: string;
    branchName: string;
    createdAt: string;
    id: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  id: string;
  name: string;
  updatedAt: string;
}>;

export type Role = {
  createdAt: string;
  description: string | null;
  id: string;
  name: string;
  permissions: Array<string>;
  updatedAt: string;
};

export type Roles = Array<{
  createdAt: string;
  description: string | null;
  id: string;
  name: string;
  permissions: Array<string>;
  updatedAt: string;
}>;

export type SignUpPayload = {
  email?: string;
  name: string;
  password: string;
  phone?: string;
};

export type SuccessResponse = {
  item?:
    | {
        activeOrganization: string;
        address: {
          city: string;
          country: string;
          createdAt: string;
          id: string;
          lineOne: string;
          lineTwo: string | null;
          province: string;
          updatedAt: string;
          zipCode: string;
        } | null;
        banReason: string | null;
        bankDetails: {
          accountHolder: string;
          accountNumber: string;
          bankName: string;
          branchName: string;
          createdAt: string;
          id: string;
          updatedAt: string;
        } | null;
        banned: boolean;
        createdAt: string;
        email: string;
        id: string;
        mfaEnabled: boolean;
        mfaVerified: boolean;
        name: string;
        phone: string;
        roles: Array<{
          createdAt: string;
          description: string | null;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }>;
        type: 'standard' | 'collector' | 'business' | 'system';
        updatedAt: string;
      }
    | {
        createdAt: string;
        description: string | null;
        id: string;
        name: string;
        permissions: Array<string>;
        updatedAt: string;
      }
    | {
        address: {
          city: string;
          country: string;
          createdAt: string;
          id: string;
          lineOne: string;
          lineTwo: string | null;
          province: string;
          updatedAt: string;
          zipCode: string;
        } | null;
        bankDetails: {
          accountHolder: string;
          accountNumber: string;
          bankName: string;
          branchName: string;
          createdAt: string;
          id: string;
          updatedAt: string;
        } | null;
        createdAt: string;
        id: string;
        name: string;
        updatedAt: string;
      }
    | ({
        city: string;
        country: string;
        createdAt: string;
        id: string;
        lineOne: string;
        lineTwo: string | null;
        province: string;
        updatedAt: string;
        zipCode: string;
      } | null)
    | ({
        accountHolder: string;
        accountNumber: string;
        bankName: string;
        branchName: string;
        createdAt: string;
        id: string;
        updatedAt: string;
      } | null)
    | {
        carbonFactor: string;
        createdAt: string;
        gwCode: string;
        id: string;
        name: string;
        updatedAt: string;
        value: number;
      }
    | {
        collector: {
          activeOrganization: string;
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          banReason: string | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          banned: boolean;
          createdAt: string;
          email: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          phone: string;
          roles: Array<{
            createdAt: string;
            description: string | null;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }>;
          type: 'standard' | 'collector' | 'business' | 'system';
          updatedAt: string;
        };
        createdAt: string;
        id: string;
        materials: Array<{
          createdAt: string;
          id: string;
          material: {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
            value: number;
          };
          updatedAt: string;
          weight: number;
        }>;
        organization: {
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          createdAt: string;
          id: string;
          name: string;
          updatedAt: string;
        };
        updatedAt: string;
      }
    | {
        collector: {
          activeOrganization: string;
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          banReason: string | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          banned: boolean;
          createdAt: string;
          email: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          phone: string;
          roles: Array<{
            createdAt: string;
            description: string | null;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }>;
          type: 'standard' | 'collector' | 'business' | 'system';
          updatedAt: string;
        };
        createdAt: string;
        id: string;
        materials: Array<{
          createdAt: string;
          id: string;
          material: {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
            value: number;
          };
          updatedAt: string;
          weight: number;
        }>;
        organization: {
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          createdAt: string;
          id: string;
          name: string;
          updatedAt: string;
        };
        updatedAt: string;
      };
  items?:
    | Array<{
        activeOrganization: string;
        address: {
          city: string;
          country: string;
          createdAt: string;
          id: string;
          lineOne: string;
          lineTwo: string | null;
          province: string;
          updatedAt: string;
          zipCode: string;
        } | null;
        banReason: string | null;
        bankDetails: {
          accountHolder: string;
          accountNumber: string;
          bankName: string;
          branchName: string;
          createdAt: string;
          id: string;
          updatedAt: string;
        } | null;
        banned: boolean;
        createdAt: string;
        email: string;
        id: string;
        mfaEnabled: boolean;
        mfaVerified: boolean;
        name: string;
        phone: string;
        roles: Array<{
          createdAt: string;
          description: string | null;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }>;
        type: 'standard' | 'collector' | 'business' | 'system';
        updatedAt: string;
      }>
    | Array<{
        createdAt: string;
        description: string | null;
        id: string;
        name: string;
        permissions: Array<string>;
        updatedAt: string;
      }>
    | Array<{
        address: {
          city: string;
          country: string;
          createdAt: string;
          id: string;
          lineOne: string;
          lineTwo: string | null;
          province: string;
          updatedAt: string;
          zipCode: string;
        } | null;
        bankDetails: {
          accountHolder: string;
          accountNumber: string;
          bankName: string;
          branchName: string;
          createdAt: string;
          id: string;
          updatedAt: string;
        } | null;
        createdAt: string;
        id: string;
        name: string;
        updatedAt: string;
      }>
    | Array<{
        city: string;
        country: string;
        createdAt: string;
        id: string;
        lineOne: string;
        lineTwo: string | null;
        province: string;
        updatedAt: string;
        zipCode: string;
      } | null>
    | Array<{
        accountHolder: string;
        accountNumber: string;
        bankName: string;
        branchName: string;
        createdAt: string;
        id: string;
        updatedAt: string;
      } | null>
    | Array<{
        carbonFactor: string;
        createdAt: string;
        gwCode: string;
        id: string;
        name: string;
        updatedAt: string;
        value: number;
      }>
    | Array<{
        collector: {
          activeOrganization: string;
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          banReason: string | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          banned: boolean;
          createdAt: string;
          email: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          phone: string;
          roles: Array<{
            createdAt: string;
            description: string | null;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }>;
          type: 'standard' | 'collector' | 'business' | 'system';
          updatedAt: string;
        };
        createdAt: string;
        id: string;
        materials: Array<{
          createdAt: string;
          id: string;
          material: {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
            value: number;
          };
          updatedAt: string;
          weight: number;
        }>;
        organization: {
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          createdAt: string;
          id: string;
          name: string;
          updatedAt: string;
        };
        updatedAt: string;
      }>
    | Array<{
        collector: {
          activeOrganization: string;
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          banReason: string | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          banned: boolean;
          createdAt: string;
          email: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          phone: string;
          roles: Array<{
            createdAt: string;
            description: string | null;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }>;
          type: 'standard' | 'collector' | 'business' | 'system';
          updatedAt: string;
        };
        createdAt: string;
        id: string;
        materials: Array<{
          createdAt: string;
          id: string;
          material: {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
            value: number;
          };
          updatedAt: string;
          weight: number;
        }>;
        organization: {
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          createdAt: string;
          id: string;
          name: string;
          updatedAt: string;
        };
        updatedAt: string;
      }>;
  pageDetails?: {
    count?: number;
    currentPage?: number;
    nextPage?: number;
    pages?: number;
    previousPage?: number;
  } | null;
};

export type Transaction = {
  collector: {
    activeOrganization: string;
    address: {
      city: string;
      country: string;
      createdAt: string;
      id: string;
      lineOne: string;
      lineTwo: string | null;
      province: string;
      updatedAt: string;
      zipCode: string;
    } | null;
    banReason: string | null;
    bankDetails: {
      accountHolder: string;
      accountNumber: string;
      bankName: string;
      branchName: string;
      createdAt: string;
      id: string;
      updatedAt: string;
    } | null;
    banned: boolean;
    createdAt: string;
    email: string;
    id: string;
    mfaEnabled: boolean;
    mfaVerified: boolean;
    name: string;
    phone: string;
    roles: Array<{
      createdAt: string;
      description: string | null;
      id: string;
      name: string;
      permissions: Array<string>;
      updatedAt: string;
    }>;
    type: 'standard' | 'collector' | 'business' | 'system';
    updatedAt: string;
  };
  createdAt: string;
  id: string;
  materials: Array<{
    createdAt: string;
    id: string;
    material: {
      carbonFactor: string;
      createdAt: string;
      gwCode: string;
      id: string;
      name: string;
      updatedAt: string;
      value: number;
    };
    updatedAt: string;
    weight: number;
  }>;
  organization: {
    address: {
      city: string;
      country: string;
      createdAt: string;
      id: string;
      lineOne: string;
      lineTwo: string | null;
      province: string;
      updatedAt: string;
      zipCode: string;
    } | null;
    bankDetails: {
      accountHolder: string;
      accountNumber: string;
      bankName: string;
      branchName: string;
      createdAt: string;
      id: string;
      updatedAt: string;
    } | null;
    createdAt: string;
    id: string;
    name: string;
    updatedAt: string;
  };
  updatedAt: string;
};

export type Transactions = Array<{
  collector: {
    activeOrganization: string;
    address: {
      city: string;
      country: string;
      createdAt: string;
      id: string;
      lineOne: string;
      lineTwo: string | null;
      province: string;
      updatedAt: string;
      zipCode: string;
    } | null;
    banReason: string | null;
    bankDetails: {
      accountHolder: string;
      accountNumber: string;
      bankName: string;
      branchName: string;
      createdAt: string;
      id: string;
      updatedAt: string;
    } | null;
    banned: boolean;
    createdAt: string;
    email: string;
    id: string;
    mfaEnabled: boolean;
    mfaVerified: boolean;
    name: string;
    phone: string;
    roles: Array<{
      createdAt: string;
      description: string | null;
      id: string;
      name: string;
      permissions: Array<string>;
      updatedAt: string;
    }>;
    type: 'standard' | 'collector' | 'business' | 'system';
    updatedAt: string;
  };
  createdAt: string;
  id: string;
  materials: Array<{
    createdAt: string;
    id: string;
    material: {
      carbonFactor: string;
      createdAt: string;
      gwCode: string;
      id: string;
      name: string;
      updatedAt: string;
      value: number;
    };
    updatedAt: string;
    weight: number;
  }>;
  organization: {
    address: {
      city: string;
      country: string;
      createdAt: string;
      id: string;
      lineOne: string;
      lineTwo: string | null;
      province: string;
      updatedAt: string;
      zipCode: string;
    } | null;
    bankDetails: {
      accountHolder: string;
      accountNumber: string;
      bankName: string;
      branchName: string;
      createdAt: string;
      id: string;
      updatedAt: string;
    } | null;
    createdAt: string;
    id: string;
    name: string;
    updatedAt: string;
  };
  updatedAt: string;
}>;

export type User = {
  activeOrganization: string;
  address: {
    city: string;
    country: string;
    createdAt: string;
    id: string;
    lineOne: string;
    lineTwo: string | null;
    province: string;
    updatedAt: string;
    zipCode: string;
  } | null;
  banReason: string | null;
  bankDetails: {
    accountHolder: string;
    accountNumber: string;
    bankName: string;
    branchName: string;
    createdAt: string;
    id: string;
    updatedAt: string;
  } | null;
  banned: boolean;
  createdAt: string;
  email: string;
  id: string;
  mfaEnabled: boolean;
  mfaVerified: boolean;
  name: string;
  phone: string;
  roles: Array<{
    createdAt: string;
    description: string | null;
    id: string;
    name: string;
    permissions: Array<string>;
    updatedAt: string;
  }>;
  type: 'standard' | 'collector' | 'business' | 'system';
  updatedAt: string;
};

export type Users = Array<{
  activeOrganization: string;
  address: {
    city: string;
    country: string;
    createdAt: string;
    id: string;
    lineOne: string;
    lineTwo: string | null;
    province: string;
    updatedAt: string;
    zipCode: string;
  } | null;
  banReason: string | null;
  bankDetails: {
    accountHolder: string;
    accountNumber: string;
    bankName: string;
    branchName: string;
    createdAt: string;
    id: string;
    updatedAt: string;
  } | null;
  banned: boolean;
  createdAt: string;
  email: string;
  id: string;
  mfaEnabled: boolean;
  mfaVerified: boolean;
  name: string;
  phone: string;
  roles: Array<{
    createdAt: string;
    description: string | null;
    id: string;
    name: string;
    permissions: Array<string>;
    updatedAt: string;
  }>;
  type: 'standard' | 'collector' | 'business' | 'system';
  updatedAt: string;
}>;

export type GetApiAuthenticationCheckData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/authentication/check';
};

export type GetApiAuthenticationCheckErrors = {
  /**
   * Unauthorized
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal server error.
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type GetApiAuthenticationCheckError =
  GetApiAuthenticationCheckErrors[keyof GetApiAuthenticationCheckErrors];

export type GetApiAuthenticationCheckResponses = {
  /**
   * Successful authentication check.
   */
  200: {
    item?:
      | {
          activeOrganization: string;
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          banReason: string | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          banned: boolean;
          createdAt: string;
          email: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          phone: string;
          roles: Array<{
            createdAt: string;
            description: string | null;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }>;
          type: 'standard' | 'collector' | 'business' | 'system';
          updatedAt: string;
        }
      | {
          createdAt: string;
          description: string | null;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          createdAt: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | ({
          city: string;
          country: string;
          createdAt: string;
          id: string;
          lineOne: string;
          lineTwo: string | null;
          province: string;
          updatedAt: string;
          zipCode: string;
        } | null)
      | ({
          accountHolder: string;
          accountNumber: string;
          bankName: string;
          branchName: string;
          createdAt: string;
          id: string;
          updatedAt: string;
        } | null)
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
          value: number;
        }
      | {
          collector: {
            activeOrganization: string;
            address: {
              city: string;
              country: string;
              createdAt: string;
              id: string;
              lineOne: string;
              lineTwo: string | null;
              province: string;
              updatedAt: string;
              zipCode: string;
            } | null;
            banReason: string | null;
            bankDetails: {
              accountHolder: string;
              accountNumber: string;
              bankName: string;
              branchName: string;
              createdAt: string;
              id: string;
              updatedAt: string;
            } | null;
            banned: boolean;
            createdAt: string;
            email: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            phone: string;
            roles: Array<{
              createdAt: string;
              description: string | null;
              id: string;
              name: string;
              permissions: Array<string>;
              updatedAt: string;
            }>;
            type: 'standard' | 'collector' | 'business' | 'system';
            updatedAt: string;
          };
          createdAt: string;
          id: string;
          materials: Array<{
            createdAt: string;
            id: string;
            material: {
              carbonFactor: string;
              createdAt: string;
              gwCode: string;
              id: string;
              name: string;
              updatedAt: string;
              value: number;
            };
            updatedAt: string;
            weight: number;
          }>;
          organization: {
            address: {
              city: string;
              country: string;
              createdAt: string;
              id: string;
              lineOne: string;
              lineTwo: string | null;
              province: string;
              updatedAt: string;
              zipCode: string;
            } | null;
            bankDetails: {
              accountHolder: string;
              accountNumber: string;
              bankName: string;
              branchName: string;
              createdAt: string;
              id: string;
              updatedAt: string;
            } | null;
            createdAt: string;
            id: string;
            name: string;
            updatedAt: string;
          };
          updatedAt: string;
        }
      | {
          collector: {
            activeOrganization: string;
            address: {
              city: string;
              country: string;
              createdAt: string;
              id: string;
              lineOne: string;
              lineTwo: string | null;
              province: string;
              updatedAt: string;
              zipCode: string;
            } | null;
            banReason: string | null;
            bankDetails: {
              accountHolder: string;
              accountNumber: string;
              bankName: string;
              branchName: string;
              createdAt: string;
              id: string;
              updatedAt: string;
            } | null;
            banned: boolean;
            createdAt: string;
            email: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            phone: string;
            roles: Array<{
              createdAt: string;
              description: string | null;
              id: string;
              name: string;
              permissions: Array<string>;
              updatedAt: string;
            }>;
            type: 'standard' | 'collector' | 'business' | 'system';
            updatedAt: string;
          };
          createdAt: string;
          id: string;
          materials: Array<{
            createdAt: string;
            id: string;
            material: {
              carbonFactor: string;
              createdAt: string;
              gwCode: string;
              id: string;
              name: string;
              updatedAt: string;
              value: number;
            };
            updatedAt: string;
            weight: number;
          }>;
          organization: {
            address: {
              city: string;
              country: string;
              createdAt: string;
              id: string;
              lineOne: string;
              lineTwo: string | null;
              province: string;
              updatedAt: string;
              zipCode: string;
            } | null;
            bankDetails: {
              accountHolder: string;
              accountNumber: string;
              bankName: string;
              branchName: string;
              createdAt: string;
              id: string;
              updatedAt: string;
            } | null;
            createdAt: string;
            id: string;
            name: string;
            updatedAt: string;
          };
          updatedAt: string;
        };
    items?:
      | Array<{
          activeOrganization: string;
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          banReason: string | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          banned: boolean;
          createdAt: string;
          email: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          phone: string;
          roles: Array<{
            createdAt: string;
            description: string | null;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }>;
          type: 'standard' | 'collector' | 'business' | 'system';
          updatedAt: string;
        }>
      | Array<{
          createdAt: string;
          description: string | null;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }>
      | Array<{
          address: {
            city: string;
            country: string;
            createdAt: string;
            id: string;
            lineOne: string;
            lineTwo: string | null;
            province: string;
            updatedAt: string;
            zipCode: string;
          } | null;
          bankDetails: {
            accountHolder: string;
            accountNumber: string;
            bankName: string;
            branchName: string;
            createdAt: string;
            id: string;
            updatedAt: string;
          } | null;
          createdAt: string;
          id: string;
          name: string;
          updatedAt: string;
        }>
      | Array<{
          city: string;
          country: string;
          createdAt: string;
          id: string;
          lineOne: string;
          lineTwo: string | null;
          province: string;
          updatedAt: string;
          zipCode: string;
        } | null>
      | Array<{
          accountHolder: string;
          accountNumber: string;
          bankName: string;
          branchName: string;
          createdAt: string;
          id: string;
          updatedAt: string;
        } | null>
      | Array<{
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
          value: number;
        }>
      | Array<{
          collector: {
            activeOrganization: string;
            address: {
              city: string;
              country: string;
              createdAt: string;
              id: string;
              lineOne: string;
              lineTwo: string | null;
              province: string;
              updatedAt: string;
              zipCode: string;
            } | null;
            banReason: string | null;
            bankDetails: {
              accountHolder: string;
              accountNumber: string;
              bankName: string;
              branchName: string;
              createdAt: string;
              id: string;
              updatedAt: string;
            } | null;
            banned: boolean;
            createdAt: string;
            email: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            phone: string;
            roles: Array<{
              createdAt: string;
              description: string | null;
              id: string;
              name: string;
              permissions: Array<string>;
              updatedAt: string;
            }>;
            type: 'standard' | 'collector' | 'business' | 'system';
            updatedAt: string;
          };
          createdAt: string;
          id: string;
          materials: Array<{
            createdAt: string;
            id: string;
            material: {
              carbonFactor: string;
              createdAt: string;
              gwCode: string;
              id: string;
              name: string;
              updatedAt: string;
              value: number;
            };
            updatedAt: string;
            weight: number;
          }>;
          organization: {
            address: {
              city: string;
              country: string;
              createdAt: string;
              id: string;
              lineOne: string;
              lineTwo: string | null;
              province: string;
              updatedAt: string;
              zipCode: string;
            } | null;
            bankDetails: {
              accountHolder: string;
              accountNumber: string;
              bankName: string;
              branchName: string;
              createdAt: string;
              id: string;
              updatedAt: string;
            } | null;
            createdAt: string;
            id: string;
            name: string;
            updatedAt: string;
          };
          updatedAt: string;
        }>
      | Array<{
          collector: {
            activeOrganization: string;
            address: {
              city: string;
              country: string;
              createdAt: string;
              id: string;
              lineOne: string;
              lineTwo: string | null;
              province: string;
              updatedAt: string;
              zipCode: string;
            } | null;
            banReason: string | null;
            bankDetails: {
              accountHolder: string;
              accountNumber: string;
              bankName: string;
              branchName: string;
              createdAt: string;
              id: string;
              updatedAt: string;
            } | null;
            banned: boolean;
            createdAt: string;
            email: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            phone: string;
            roles: Array<{
              createdAt: string;
              description: string | null;
              id: string;
              name: string;
              permissions: Array<string>;
              updatedAt: string;
            }>;
            type: 'standard' | 'collector' | 'business' | 'system';
            updatedAt: string;
          };
          createdAt: string;
          id: string;
          materials: Array<{
            createdAt: string;
            id: string;
            material: {
              carbonFactor: string;
              createdAt: string;
              gwCode: string;
              id: string;
              name: string;
              updatedAt: string;
              value: number;
            };
            updatedAt: string;
            weight: number;
          }>;
          organization: {
            address: {
              city: string;
              country: string;
              createdAt: string;
              id: string;
              lineOne: string;
              lineTwo: string | null;
              province: string;
              updatedAt: string;
              zipCode: string;
            } | null;
            bankDetails: {
              accountHolder: string;
              accountNumber: string;
              bankName: string;
              branchName: string;
              createdAt: string;
              id: string;
              updatedAt: string;
            } | null;
            createdAt: string;
            id: string;
            name: string;
            updatedAt: string;
          };
          updatedAt: string;
        }>;
    pageDetails?: {
      count?: number;
      currentPage?: number;
      nextPage?: number;
      pages?: number;
      previousPage?: number;
    } | null;
  };
};

export type GetApiAuthenticationCheckResponse =
  GetApiAuthenticationCheckResponses[keyof GetApiAuthenticationCheckResponses];

export type PostApiAuthenticationLoginData = {
  body: {
    emailOrPhone: string;
    password: string;
  };
  path?: never;
  query?: never;
  url: '/api/authentication/login';
};

export type PostApiAuthenticationLoginErrors = {
  /**
   * Invalid request.
   */
  400: {
    error?: string;
    message?: string;
  };
  /**
   * Unauthorized.
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal Server Error.
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type PostApiAuthenticationLoginError =
  PostApiAuthenticationLoginErrors[keyof PostApiAuthenticationLoginErrors];

export type PostApiAuthenticationLoginResponses = {
  /**
   * The user has been successfully logged in.
   */
  200: unknown;
};

export type PostApiAuthenticationLogoutData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/authentication/logout';
};

export type PostApiAuthenticationLogoutErrors = {
  /**
   * Unauthorized
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal server error.
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type PostApiAuthenticationLogoutError =
  PostApiAuthenticationLogoutErrors[keyof PostApiAuthenticationLogoutErrors];

export type PostApiAuthenticationLogoutResponses = {
  /**
   * Successful logout.
   */
  200: unknown;
};

export type GetApiAuthenticationMfaEnableData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/authentication/mfa/enable';
};

export type GetApiAuthenticationMfaEnableErrors = {
  /**
   * Unauthorized
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal server error
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type GetApiAuthenticationMfaEnableError =
  GetApiAuthenticationMfaEnableErrors[keyof GetApiAuthenticationMfaEnableErrors];

export type GetApiAuthenticationMfaEnableResponses = {
  /**
   * The MFA QR code has been successfully generated and returned.
   */
  200: unknown;
};

export type PostApiAuthenticationMfaVerifyData = {
  body: {
    code?: string;
  };
  path?: never;
  query?: never;
  url: '/api/authentication/mfa/verify';
};

export type PostApiAuthenticationMfaVerifyErrors = {
  /**
   * Bad Request
   */
  400: {
    error?: string;
    message?: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal server error
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type PostApiAuthenticationMfaVerifyError =
  PostApiAuthenticationMfaVerifyErrors[keyof PostApiAuthenticationMfaVerifyErrors];

export type PostApiAuthenticationMfaVerifyResponses = {
  /**
   * MFA verification successful.
   */
  200: unknown;
};

export type GetApiMaterialsData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Page number for pagination. Defaults to 1.
     */
    page?: number;
    /**
     * Number of items per page. Defaults to 10.
     */
    limit?: number;
    /**
     * Search term for filtering materials.
     */
    search?: string;
  };
  url: '/api/materials';
};

export type GetApiMaterialsErrors = {
  /**
   * Bad Request
   */
  400: {
    error?: string;
    message?: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal server error.
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type GetApiMaterialsError =
  GetApiMaterialsErrors[keyof GetApiMaterialsErrors];

export type GetApiMaterialsResponses = {
  /**
   * Successful materials retrieval.
   */
  200: Array<{
    carbonFactor: string;
    createdAt: string;
    gwCode: string;
    id: string;
    name: string;
    updatedAt: string;
    value: number;
  }>;
};

export type GetApiMaterialsResponse =
  GetApiMaterialsResponses[keyof GetApiMaterialsResponses];

export type PostApiMaterialsData = {
  /**
   * Payload to create a new material.
   */
  body: {
    carbonFactor: number;
    gwCode: string;
    name: string;
  };
  path?: never;
  query?: never;
  url: '/api/materials';
};

export type PostApiMaterialsErrors = {
  /**
   * Bad Request
   */
  400: {
    error?: string;
    message?: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal server error.
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type PostApiMaterialsError =
  PostApiMaterialsErrors[keyof PostApiMaterialsErrors];

export type PostApiMaterialsResponses = {
  /**
   * Successful material creation.
   */
  200: string;
};

export type PostApiMaterialsResponse =
  PostApiMaterialsResponses[keyof PostApiMaterialsResponses];

export type DeleteApiMaterialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/materials/{id}';
};

export type DeleteApiMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error?: string;
    message?: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal server error.
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type DeleteApiMaterialsByIdError =
  DeleteApiMaterialsByIdErrors[keyof DeleteApiMaterialsByIdErrors];

export type DeleteApiMaterialsByIdResponses = {
  /**
   * Successful material deletion.
   */
  200: string;
};

export type DeleteApiMaterialsByIdResponse =
  DeleteApiMaterialsByIdResponses[keyof DeleteApiMaterialsByIdResponses];

export type GetApiMaterialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/materials/{id}';
};

export type GetApiMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error?: string;
    message?: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal server error.
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type GetApiMaterialsByIdError =
  GetApiMaterialsByIdErrors[keyof GetApiMaterialsByIdErrors];

export type GetApiMaterialsByIdResponses = {
  /**
   * Successful material retrieval.
   */
  200: {
    carbonFactor: string;
    createdAt: string;
    gwCode: string;
    id: string;
    name: string;
    updatedAt: string;
    value: number;
  };
};

export type GetApiMaterialsByIdResponse =
  GetApiMaterialsByIdResponses[keyof GetApiMaterialsByIdResponses];

export type PatchApiMaterialsByIdData = {
  /**
   * Payload to update an existing material.
   */
  body: {
    carbonFactor?: number;
    gwCode?: string;
    name?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/api/materials/{id}';
};

export type PatchApiMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error?: string;
    message?: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error?: string;
    message?: string;
  };
  /**
   * Internal server error.
   */
  500: {
    error?: string;
    message?: string;
  };
  default: unknown;
};

export type PatchApiMaterialsByIdError =
  PatchApiMaterialsByIdErrors[keyof PatchApiMaterialsByIdErrors];

export type PatchApiMaterialsByIdResponses = {
  /**
   * Successful material update.
   */
  200: string;
};

export type PatchApiMaterialsByIdResponse =
  PatchApiMaterialsByIdResponses[keyof PatchApiMaterialsByIdResponses];

export type ClientOptions = {
  baseUrl: 'http://localhost:6173' | 'https://3reco.co.za' | (string & {});
};
