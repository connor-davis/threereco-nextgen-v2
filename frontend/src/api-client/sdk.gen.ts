// This file is auto-generated by @hey-api/openapi-ts
import type { Client, Options as ClientOptions, TDataShape } from './client';
import { client as _heyApiClient } from './client.gen';
import type {
  DeleteApiAddressesIdData,
  DeleteApiAddressesIdErrors,
  DeleteApiAddressesIdResponses,
  DeleteApiBankDetailsIdData,
  DeleteApiBankDetailsIdErrors,
  DeleteApiBankDetailsIdResponses,
  DeleteApiCollectionsCollectionIdMaterialsIdData,
  DeleteApiCollectionsCollectionIdMaterialsIdErrors,
  DeleteApiCollectionsCollectionIdMaterialsIdResponses,
  DeleteApiCollectionsIdData,
  DeleteApiCollectionsIdErrors,
  DeleteApiCollectionsIdResponses,
  DeleteApiMaterialsIdData,
  DeleteApiMaterialsIdErrors,
  DeleteApiMaterialsIdResponses,
  DeleteApiOrganizationsIdData,
  DeleteApiOrganizationsIdErrors,
  DeleteApiOrganizationsIdResponses,
  DeleteApiRolesIdData,
  DeleteApiRolesIdErrors,
  DeleteApiRolesIdResponses,
  DeleteApiTransactionsIdData,
  DeleteApiTransactionsIdErrors,
  DeleteApiTransactionsIdResponses,
  DeleteApiTransactionsTransactionIdMaterialsIdData,
  DeleteApiTransactionsTransactionIdMaterialsIdErrors,
  DeleteApiTransactionsTransactionIdMaterialsIdResponses,
  DeleteApiUsersIdData,
  DeleteApiUsersIdErrors,
  DeleteApiUsersIdResponses,
  GetApiAddressesData,
  GetApiAddressesErrors,
  GetApiAddressesIdData,
  GetApiAddressesIdErrors,
  GetApiAddressesIdResponses,
  GetApiAddressesResponses,
  GetApiAuthenticationCheckData,
  GetApiAuthenticationCheckErrors,
  GetApiAuthenticationCheckResponses,
  GetApiAuthenticationMfaEnableData,
  GetApiAuthenticationMfaEnableErrors,
  GetApiAuthenticationMfaEnableResponses,
  GetApiBankDetailsData,
  GetApiBankDetailsErrors,
  GetApiBankDetailsIdData,
  GetApiBankDetailsIdErrors,
  GetApiBankDetailsIdResponses,
  GetApiBankDetailsResponses,
  GetApiCollectionsCollectionIdMaterialsData,
  GetApiCollectionsCollectionIdMaterialsErrors,
  GetApiCollectionsCollectionIdMaterialsIdData,
  GetApiCollectionsCollectionIdMaterialsIdErrors,
  GetApiCollectionsCollectionIdMaterialsIdResponses,
  GetApiCollectionsCollectionIdMaterialsResponses,
  GetApiCollectionsData,
  GetApiCollectionsErrors,
  GetApiCollectionsIdData,
  GetApiCollectionsIdErrors,
  GetApiCollectionsIdResponses,
  GetApiCollectionsResponses,
  GetApiMaterialsData,
  GetApiMaterialsErrors,
  GetApiMaterialsIdData,
  GetApiMaterialsIdErrors,
  GetApiMaterialsIdResponses,
  GetApiMaterialsResponses,
  GetApiOrganizationsData,
  GetApiOrganizationsErrors,
  GetApiOrganizationsIdData,
  GetApiOrganizationsIdErrors,
  GetApiOrganizationsIdResponses,
  GetApiOrganizationsResponses,
  GetApiPermissionsData,
  GetApiPermissionsErrors,
  GetApiPermissionsResponses,
  GetApiRolesData,
  GetApiRolesErrors,
  GetApiRolesIdData,
  GetApiRolesIdErrors,
  GetApiRolesIdResponses,
  GetApiRolesResponses,
  GetApiTransactionsData,
  GetApiTransactionsErrors,
  GetApiTransactionsIdData,
  GetApiTransactionsIdErrors,
  GetApiTransactionsIdResponses,
  GetApiTransactionsResponses,
  GetApiTransactionsTransactionIdMaterialsData,
  GetApiTransactionsTransactionIdMaterialsErrors,
  GetApiTransactionsTransactionIdMaterialsIdData,
  GetApiTransactionsTransactionIdMaterialsIdErrors,
  GetApiTransactionsTransactionIdMaterialsIdResponses,
  GetApiTransactionsTransactionIdMaterialsResponses,
  GetApiUsersData,
  GetApiUsersErrors,
  GetApiUsersIdData,
  GetApiUsersIdErrors,
  GetApiUsersIdResponses,
  GetApiUsersResponses,
  PatchApiAddressesIdData,
  PatchApiAddressesIdErrors,
  PatchApiAddressesIdResponses,
  PatchApiBankDetailsIdData,
  PatchApiBankDetailsIdErrors,
  PatchApiBankDetailsIdResponses,
  PatchApiCollectionsCollectionIdMaterialsIdData,
  PatchApiCollectionsCollectionIdMaterialsIdErrors,
  PatchApiCollectionsCollectionIdMaterialsIdResponses,
  PatchApiCollectionsIdData,
  PatchApiCollectionsIdErrors,
  PatchApiCollectionsIdResponses,
  PatchApiMaterialsIdData,
  PatchApiMaterialsIdErrors,
  PatchApiMaterialsIdResponses,
  PatchApiOrganizationsIdData,
  PatchApiOrganizationsIdErrors,
  PatchApiOrganizationsIdResponses,
  PatchApiRolesIdData,
  PatchApiRolesIdErrors,
  PatchApiRolesIdResponses,
  PatchApiTransactionsIdData,
  PatchApiTransactionsIdErrors,
  PatchApiTransactionsIdResponses,
  PatchApiTransactionsTransactionIdMaterialsIdData,
  PatchApiTransactionsTransactionIdMaterialsIdErrors,
  PatchApiTransactionsTransactionIdMaterialsIdResponses,
  PatchApiUsersIdData,
  PatchApiUsersIdErrors,
  PatchApiUsersIdResponses,
  PostApiAddressesData,
  PostApiAddressesErrors,
  PostApiAddressesResponses,
  PostApiAuthenticationLoginData,
  PostApiAuthenticationLoginErrors,
  PostApiAuthenticationLoginResponses,
  PostApiAuthenticationLogoutData,
  PostApiAuthenticationLogoutErrors,
  PostApiAuthenticationLogoutResponses,
  PostApiAuthenticationMfaVerifyData,
  PostApiAuthenticationMfaVerifyErrors,
  PostApiAuthenticationMfaVerifyResponses,
  PostApiAuthenticationSignUpData,
  PostApiAuthenticationSignUpErrors,
  PostApiAuthenticationSignUpResponses,
  PostApiBankDetailsData,
  PostApiBankDetailsErrors,
  PostApiBankDetailsResponses,
  PostApiCollectionsCollectionIdMaterialsData,
  PostApiCollectionsCollectionIdMaterialsErrors,
  PostApiCollectionsCollectionIdMaterialsResponses,
  PostApiCollectionsData,
  PostApiCollectionsErrors,
  PostApiCollectionsResponses,
  PostApiMaterialsData,
  PostApiMaterialsErrors,
  PostApiMaterialsResponses,
  PostApiOrganizationsData,
  PostApiOrganizationsErrors,
  PostApiOrganizationsResponses,
  PostApiRolesData,
  PostApiRolesErrors,
  PostApiRolesResponses,
  PostApiTransactionsData,
  PostApiTransactionsErrors,
  PostApiTransactionsResponses,
  PostApiTransactionsTransactionIdMaterialsData,
  PostApiTransactionsTransactionIdMaterialsErrors,
  PostApiTransactionsTransactionIdMaterialsResponses,
  PostApiUsersData,
  PostApiUsersErrors,
  PostApiUsersResponses,
} from './types.gen';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * List Addresses
 * List all addresses in the system.
 */
export const getApiAddresses = <ThrowOnError extends boolean = false>(
  options: Options<GetApiAddressesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiAddressesResponses,
    GetApiAddressesErrors,
    ThrowOnError
  >({
    url: '/api/addresses',
    ...options,
  });
};

/**
 * Create Address
 * Create a new address in the system.
 */
export const postApiAddresses = <ThrowOnError extends boolean = false>(
  options: Options<PostApiAddressesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiAddressesResponses,
    PostApiAddressesErrors,
    ThrowOnError
  >({
    url: '/api/addresses',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Address
 * Delete an existing address from the system.
 */
export const deleteApiAddressesId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiAddressesIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiAddressesIdResponses,
    DeleteApiAddressesIdErrors,
    ThrowOnError
  >({
    url: '/api/addresses/:id',
    ...options,
  });
};

/**
 * Find Address
 * Find an existing address in the system.
 */
export const getApiAddressesId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiAddressesIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiAddressesIdResponses,
    GetApiAddressesIdErrors,
    ThrowOnError
  >({
    url: '/api/addresses/:id',
    ...options,
  });
};

/**
 * Update Address
 * Update an existing address in the system.
 */
export const patchApiAddressesId = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiAddressesIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiAddressesIdResponses,
    PatchApiAddressesIdErrors,
    ThrowOnError
  >({
    url: '/api/addresses/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Check Authentication
 * Checks if the user is authenticated and returns their user information.
 */
export const getApiAuthenticationCheck = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiAuthenticationCheckData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationCheckResponses,
    GetApiAuthenticationCheckErrors,
    ThrowOnError
  >({
    url: '/api/authentication/check',
    ...options,
  });
};

/**
 * Login
 * Logs in a user with email and password.
 */
export const postApiAuthenticationLogin = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiAuthenticationLoginData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiAuthenticationLoginResponses,
    PostApiAuthenticationLoginErrors,
    ThrowOnError
  >({
    url: '/api/authentication/login',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Logout
 * Logs out the user and invalidates their session.
 */
export const postApiAuthenticationLogout = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationLogoutData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationLogoutResponses,
    PostApiAuthenticationLogoutErrors,
    ThrowOnError
  >({
    url: '/api/authentication/logout',
    ...options,
  });
};

/**
 * Enable Multi-Factor Authentication (MFA)
 * Generates a QR code for enabling Multi-Factor Authentication (MFA) for the user.
 */
export const getApiAuthenticationMfaEnable = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiAuthenticationMfaEnableData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationMfaEnableResponses,
    GetApiAuthenticationMfaEnableErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/enable',
    ...options,
  });
};

/**
 * Verify Multi-Factor Authentication (MFA)
 * Verifies the user's MFA status.
 */
export const postApiAuthenticationMfaVerify = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiAuthenticationMfaVerifyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiAuthenticationMfaVerifyResponses,
    PostApiAuthenticationMfaVerifyErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/verify',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Sign Up
 * Signs up a new user with email or phone and password.
 */
export const postApiAuthenticationSignUp = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiAuthenticationSignUpData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiAuthenticationSignUpResponses,
    PostApiAuthenticationSignUpErrors,
    ThrowOnError
  >({
    url: '/api/authentication/sign-up',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * List Bank Details
 * List all bank details in the system.
 */
export const getApiBankDetails = <ThrowOnError extends boolean = false>(
  options: Options<GetApiBankDetailsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiBankDetailsResponses,
    GetApiBankDetailsErrors,
    ThrowOnError
  >({
    url: '/api/bank-details',
    ...options,
  });
};

/**
 * Create Bank Details
 * Create new bank details in the system.
 */
export const postApiBankDetails = <ThrowOnError extends boolean = false>(
  options: Options<PostApiBankDetailsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiBankDetailsResponses,
    PostApiBankDetailsErrors,
    ThrowOnError
  >({
    url: '/api/bank-details',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Bank Details
 * Delete existing bank details from the system.
 */
export const deleteApiBankDetailsId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiBankDetailsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiBankDetailsIdResponses,
    DeleteApiBankDetailsIdErrors,
    ThrowOnError
  >({
    url: '/api/bank-details/:id',
    ...options,
  });
};

/**
 * Find Bank Detail
 * Find existing bank details in the system.
 */
export const getApiBankDetailsId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiBankDetailsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiBankDetailsIdResponses,
    GetApiBankDetailsIdErrors,
    ThrowOnError
  >({
    url: '/api/bank-details/:id',
    ...options,
  });
};

/**
 * Update Bank Details
 * Update existing bank details in the system.
 */
export const patchApiBankDetailsId = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiBankDetailsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiBankDetailsIdResponses,
    PatchApiBankDetailsIdErrors,
    ThrowOnError
  >({
    url: '/api/bank-details/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * List Collections
 * List all collections in the system.
 */
export const getApiCollections = <ThrowOnError extends boolean = false>(
  options: Options<GetApiCollectionsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiCollectionsResponses,
    GetApiCollectionsErrors,
    ThrowOnError
  >({
    url: '/api/collections',
    ...options,
  });
};

/**
 * Create Collection
 * Create a new collection in the system.
 */
export const postApiCollections = <ThrowOnError extends boolean = false>(
  options: Options<PostApiCollectionsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiCollectionsResponses,
    PostApiCollectionsErrors,
    ThrowOnError
  >({
    url: '/api/collections',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * List Collection Materials
 * List all collection materials in the system.
 */
export const getApiCollectionsCollectionIdMaterials = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiCollectionsCollectionIdMaterialsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiCollectionsCollectionIdMaterialsResponses,
    GetApiCollectionsCollectionIdMaterialsErrors,
    ThrowOnError
  >({
    url: '/api/collections/:collectionId/materials',
    ...options,
  });
};

/**
 * Create Collection Material
 * Create a new collection material in the system.
 */
export const postApiCollectionsCollectionIdMaterials = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiCollectionsCollectionIdMaterialsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiCollectionsCollectionIdMaterialsResponses,
    PostApiCollectionsCollectionIdMaterialsErrors,
    ThrowOnError
  >({
    url: '/api/collections/:collectionId/materials',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Collection Material
 * Delete an existing collection material from the system.
 */
export const deleteApiCollectionsCollectionIdMaterialsId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteApiCollectionsCollectionIdMaterialsIdData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiCollectionsCollectionIdMaterialsIdResponses,
    DeleteApiCollectionsCollectionIdMaterialsIdErrors,
    ThrowOnError
  >({
    url: '/api/collections/:collectionId/materials/:id',
    ...options,
  });
};

/**
 * Find Collection Material
 * Find an existing collection material in the system.
 */
export const getApiCollectionsCollectionIdMaterialsId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiCollectionsCollectionIdMaterialsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiCollectionsCollectionIdMaterialsIdResponses,
    GetApiCollectionsCollectionIdMaterialsIdErrors,
    ThrowOnError
  >({
    url: '/api/collections/:collectionId/materials/:id',
    ...options,
  });
};

/**
 * Update Collection Material
 * Update an existing collection material in the system.
 */
export const patchApiCollectionsCollectionIdMaterialsId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PatchApiCollectionsCollectionIdMaterialsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiCollectionsCollectionIdMaterialsIdResponses,
    PatchApiCollectionsCollectionIdMaterialsIdErrors,
    ThrowOnError
  >({
    url: '/api/collections/:collectionId/materials/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Collection
 * Delete an existing collection from the system.
 */
export const deleteApiCollectionsId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiCollectionsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiCollectionsIdResponses,
    DeleteApiCollectionsIdErrors,
    ThrowOnError
  >({
    url: '/api/collections/:id',
    ...options,
  });
};

/**
 * Find Collection
 * Find an existing collection in the system.
 */
export const getApiCollectionsId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiCollectionsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiCollectionsIdResponses,
    GetApiCollectionsIdErrors,
    ThrowOnError
  >({
    url: '/api/collections/:id',
    ...options,
  });
};

/**
 * Update Collection
 * Update an existing collection in the system.
 */
export const patchApiCollectionsId = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiCollectionsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiCollectionsIdResponses,
    PatchApiCollectionsIdErrors,
    ThrowOnError
  >({
    url: '/api/collections/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * List Materials
 * List all materials in the system.
 */
export const getApiMaterials = <ThrowOnError extends boolean = false>(
  options: Options<GetApiMaterialsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiMaterialsResponses,
    GetApiMaterialsErrors,
    ThrowOnError
  >({
    url: '/api/materials',
    ...options,
  });
};

/**
 * Create Material
 * Create a new material in the system.
 */
export const postApiMaterials = <ThrowOnError extends boolean = false>(
  options: Options<PostApiMaterialsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiMaterialsResponses,
    PostApiMaterialsErrors,
    ThrowOnError
  >({
    url: '/api/materials',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Material
 * Delete an existing material from the system.
 */
export const deleteApiMaterialsId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiMaterialsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiMaterialsIdResponses,
    DeleteApiMaterialsIdErrors,
    ThrowOnError
  >({
    url: '/api/materials/:id',
    ...options,
  });
};

/**
 * Find Material
 * Find an existing material in the system.
 */
export const getApiMaterialsId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiMaterialsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiMaterialsIdResponses,
    GetApiMaterialsIdErrors,
    ThrowOnError
  >({
    url: '/api/materials/:id',
    ...options,
  });
};

/**
 * Update Material
 * Update an existing material in the system.
 */
export const patchApiMaterialsId = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiMaterialsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiMaterialsIdResponses,
    PatchApiMaterialsIdErrors,
    ThrowOnError
  >({
    url: '/api/materials/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * List Organizations
 * List all organizations in the system.
 */
export const getApiOrganizations = <ThrowOnError extends boolean = false>(
  options: Options<GetApiOrganizationsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiOrganizationsResponses,
    GetApiOrganizationsErrors,
    ThrowOnError
  >({
    url: '/api/organizations',
    ...options,
  });
};

/**
 * Create Organization
 * Create a new organization in the system.
 */
export const postApiOrganizations = <ThrowOnError extends boolean = false>(
  options: Options<PostApiOrganizationsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiOrganizationsResponses,
    PostApiOrganizationsErrors,
    ThrowOnError
  >({
    url: '/api/organizations',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Organization
 * Delete an existing organization from the system.
 */
export const deleteApiOrganizationsId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiOrganizationsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiOrganizationsIdResponses,
    DeleteApiOrganizationsIdErrors,
    ThrowOnError
  >({
    url: '/api/organizations/:id',
    ...options,
  });
};

/**
 * Find Organization
 * Find an existing organization in the system.
 */
export const getApiOrganizationsId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiOrganizationsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiOrganizationsIdResponses,
    GetApiOrganizationsIdErrors,
    ThrowOnError
  >({
    url: '/api/organizations/:id',
    ...options,
  });
};

/**
 * Update Organization
 * Update an existing organization in the system.
 */
export const patchApiOrganizationsId = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiOrganizationsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiOrganizationsIdResponses,
    PatchApiOrganizationsIdErrors,
    ThrowOnError
  >({
    url: '/api/organizations/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * List Permissions
 * List all permissions in the system.
 */
export const getApiPermissions = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiPermissionsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiPermissionsResponses,
    GetApiPermissionsErrors,
    ThrowOnError
  >({
    url: '/api/permissions',
    ...options,
  });
};

/**
 * List Roles
 * List all roles in the system.
 */
export const getApiRoles = <ThrowOnError extends boolean = false>(
  options: Options<GetApiRolesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiRolesResponses,
    GetApiRolesErrors,
    ThrowOnError
  >({
    url: '/api/roles',
    ...options,
  });
};

/**
 * Create Role
 * Create a new role in the system.
 */
export const postApiRoles = <ThrowOnError extends boolean = false>(
  options: Options<PostApiRolesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiRolesResponses,
    PostApiRolesErrors,
    ThrowOnError
  >({
    url: '/api/roles',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Role
 * Delete an existing role from the system.
 */
export const deleteApiRolesId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiRolesIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiRolesIdResponses,
    DeleteApiRolesIdErrors,
    ThrowOnError
  >({
    url: '/api/roles/:id',
    ...options,
  });
};

/**
 * Find Role
 * Find an existing role in the system.
 */
export const getApiRolesId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiRolesIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiRolesIdResponses,
    GetApiRolesIdErrors,
    ThrowOnError
  >({
    url: '/api/roles/:id',
    ...options,
  });
};

/**
 * Update Role
 * Update an existing role in the system.
 */
export const patchApiRolesId = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiRolesIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiRolesIdResponses,
    PatchApiRolesIdErrors,
    ThrowOnError
  >({
    url: '/api/roles/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * List Transactions
 * List all transactions in the system.
 */
export const getApiTransactions = <ThrowOnError extends boolean = false>(
  options: Options<GetApiTransactionsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiTransactionsResponses,
    GetApiTransactionsErrors,
    ThrowOnError
  >({
    url: '/api/transactions',
    ...options,
  });
};

/**
 * Create Transaction
 * Create a new transaction in the system.
 */
export const postApiTransactions = <ThrowOnError extends boolean = false>(
  options: Options<PostApiTransactionsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiTransactionsResponses,
    PostApiTransactionsErrors,
    ThrowOnError
  >({
    url: '/api/transactions',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Transaction
 * Delete an existing transaction from the system.
 */
export const deleteApiTransactionsId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiTransactionsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiTransactionsIdResponses,
    DeleteApiTransactionsIdErrors,
    ThrowOnError
  >({
    url: '/api/transactions/:id',
    ...options,
  });
};

/**
 * Find Transaction
 * Find an existing transaction in the system.
 */
export const getApiTransactionsId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiTransactionsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiTransactionsIdResponses,
    GetApiTransactionsIdErrors,
    ThrowOnError
  >({
    url: '/api/transactions/:id',
    ...options,
  });
};

/**
 * Update Transaction
 * Update an existing transaction in the system.
 */
export const patchApiTransactionsId = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiTransactionsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiTransactionsIdResponses,
    PatchApiTransactionsIdErrors,
    ThrowOnError
  >({
    url: '/api/transactions/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * List Transaction Materials
 * List all transaction materials in the system.
 */
export const getApiTransactionsTransactionIdMaterials = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiTransactionsTransactionIdMaterialsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiTransactionsTransactionIdMaterialsResponses,
    GetApiTransactionsTransactionIdMaterialsErrors,
    ThrowOnError
  >({
    url: '/api/transactions/:transactionId/materials',
    ...options,
  });
};

/**
 * Create Transaction Material
 * Create a new transaction material in the system.
 */
export const postApiTransactionsTransactionIdMaterials = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiTransactionsTransactionIdMaterialsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiTransactionsTransactionIdMaterialsResponses,
    PostApiTransactionsTransactionIdMaterialsErrors,
    ThrowOnError
  >({
    url: '/api/transactions/:transactionId/materials',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Transaction Material
 * Delete an existing transaction material from the system.
 */
export const deleteApiTransactionsTransactionIdMaterialsId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteApiTransactionsTransactionIdMaterialsIdData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiTransactionsTransactionIdMaterialsIdResponses,
    DeleteApiTransactionsTransactionIdMaterialsIdErrors,
    ThrowOnError
  >({
    url: '/api/transactions/:transactionId/materials/:id',
    ...options,
  });
};

/**
 * Find Transaction Material
 * Find an existing transaction material in the system.
 */
export const getApiTransactionsTransactionIdMaterialsId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiTransactionsTransactionIdMaterialsIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiTransactionsTransactionIdMaterialsIdResponses,
    GetApiTransactionsTransactionIdMaterialsIdErrors,
    ThrowOnError
  >({
    url: '/api/transactions/:transactionId/materials/:id',
    ...options,
  });
};

/**
 * Update Transaction Material
 * Update an existing transaction material in the system.
 */
export const patchApiTransactionsTransactionIdMaterialsId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PatchApiTransactionsTransactionIdMaterialsIdData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiTransactionsTransactionIdMaterialsIdResponses,
    PatchApiTransactionsTransactionIdMaterialsIdErrors,
    ThrowOnError
  >({
    url: '/api/transactions/:transactionId/materials/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * List Users
 * List all users in the system.
 */
export const getApiUsers = <ThrowOnError extends boolean = false>(
  options: Options<GetApiUsersData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiUsersResponses,
    GetApiUsersErrors,
    ThrowOnError
  >({
    url: '/api/users',
    ...options,
  });
};

/**
 * Create User
 * Create a new user in the system.
 */
export const postApiUsers = <ThrowOnError extends boolean = false>(
  options: Options<PostApiUsersData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiUsersResponses,
    PostApiUsersErrors,
    ThrowOnError
  >({
    url: '/api/users',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete User
 * Delete an existing user from the system.
 */
export const deleteApiUsersId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiUsersIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiUsersIdResponses,
    DeleteApiUsersIdErrors,
    ThrowOnError
  >({
    url: '/api/users/:id',
    ...options,
  });
};

/**
 * Find User
 * Find an existing user in the system.
 */
export const getApiUsersId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiUsersIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiUsersIdResponses,
    GetApiUsersIdErrors,
    ThrowOnError
  >({
    url: '/api/users/:id',
    ...options,
  });
};

/**
 * Update User
 * Update an existing user in the system.
 */
export const patchApiUsersId = <ThrowOnError extends boolean = false>(
  options: Options<PatchApiUsersIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    PatchApiUsersIdResponses,
    PatchApiUsersIdErrors,
    ThrowOnError
  >({
    url: '/api/users/:id',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};
