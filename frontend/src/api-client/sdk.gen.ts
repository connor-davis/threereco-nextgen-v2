// This file is auto-generated by @hey-api/openapi-ts
import type { Client, Options as ClientOptions, TDataShape } from './client';
import { client as _heyApiClient } from './client.gen';
import type {
  DeleteApiMaterialsByIdData,
  DeleteApiMaterialsByIdErrors,
  DeleteApiMaterialsByIdResponses,
  DeleteApiNotificationsByIdData,
  DeleteApiNotificationsByIdErrors,
  DeleteApiNotificationsByIdResponses,
  DeleteApiOrganizationsByIdData,
  DeleteApiOrganizationsByIdErrors,
  DeleteApiOrganizationsByIdResponses,
  DeleteApiOrganizationsUsersByIdData,
  DeleteApiOrganizationsUsersByIdErrors,
  DeleteApiOrganizationsUsersByIdResponses,
  DeleteApiProductsByIdData,
  DeleteApiProductsByIdErrors,
  DeleteApiProductsByIdResponses,
  DeleteApiRolesByIdData,
  DeleteApiRolesByIdErrors,
  DeleteApiRolesByIdResponses,
  DeleteApiTransactionsByIdData,
  DeleteApiTransactionsByIdErrors,
  DeleteApiTransactionsByIdResponses,
  DeleteApiUsersByIdData,
  DeleteApiUsersByIdErrors,
  DeleteApiUsersByIdResponses,
  GetApiAuditlogsByIdData,
  GetApiAuditlogsByIdErrors,
  GetApiAuditlogsByIdResponses,
  GetApiAuditlogsData,
  GetApiAuditlogsErrors,
  GetApiAuditlogsResponses,
  GetApiAuthenticationCheckData,
  GetApiAuthenticationCheckErrors,
  GetApiAuthenticationCheckResponses,
  GetApiAuthenticationMfaEnableData,
  GetApiAuthenticationMfaEnableErrors,
  GetApiAuthenticationMfaEnableResponses,
  GetApiAuthenticationOrganizationsData,
  GetApiAuthenticationOrganizationsErrors,
  GetApiAuthenticationOrganizationsResponses,
  GetApiAuthenticationPermissionsData,
  GetApiAuthenticationPermissionsErrors,
  GetApiAuthenticationPermissionsResponses,
  GetApiCollectionsData,
  GetApiCollectionsErrors,
  GetApiCollectionsResponses,
  GetApiMaterialsByIdData,
  GetApiMaterialsByIdErrors,
  GetApiMaterialsByIdResponses,
  GetApiMaterialsData,
  GetApiMaterialsErrors,
  GetApiMaterialsResponses,
  GetApiNotificationsByIdData,
  GetApiNotificationsByIdErrors,
  GetApiNotificationsByIdResponses,
  GetApiNotificationsData,
  GetApiNotificationsErrors,
  GetApiNotificationsResponses,
  GetApiOrganizationsByIdData,
  GetApiOrganizationsByIdErrors,
  GetApiOrganizationsByIdResponses,
  GetApiOrganizationsData,
  GetApiOrganizationsErrors,
  GetApiOrganizationsResponses,
  GetApiProductsByIdData,
  GetApiProductsByIdErrors,
  GetApiProductsByIdResponses,
  GetApiProductsData,
  GetApiProductsErrors,
  GetApiProductsResponses,
  GetApiRolesAvailablePermissionsData,
  GetApiRolesAvailablePermissionsErrors,
  GetApiRolesAvailablePermissionsResponses,
  GetApiRolesByIdData,
  GetApiRolesByIdErrors,
  GetApiRolesByIdResponses,
  GetApiRolesData,
  GetApiRolesErrors,
  GetApiRolesResponses,
  GetApiTransactionsByIdData,
  GetApiTransactionsByIdErrors,
  GetApiTransactionsByIdResponses,
  GetApiTransactionsData,
  GetApiTransactionsErrors,
  GetApiTransactionsResponses,
  GetApiUsersByIdData,
  GetApiUsersByIdErrors,
  GetApiUsersByIdResponses,
  GetApiUsersData,
  GetApiUsersErrors,
  GetApiUsersResponses,
  PostApiAuthenticationLoginData,
  PostApiAuthenticationLoginErrors,
  PostApiAuthenticationLoginResponses,
  PostApiAuthenticationLogoutData,
  PostApiAuthenticationLogoutErrors,
  PostApiAuthenticationLogoutResponses,
  PostApiAuthenticationMfaVerifyData,
  PostApiAuthenticationMfaVerifyErrors,
  PostApiAuthenticationMfaVerifyResponses,
  PostApiAuthenticationSignUpData,
  PostApiAuthenticationSignUpErrors,
  PostApiAuthenticationSignUpResponses,
  PostApiMaterialsData,
  PostApiMaterialsErrors,
  PostApiMaterialsResponses,
  PostApiNotificationsData,
  PostApiNotificationsErrors,
  PostApiNotificationsResponses,
  PostApiOrganizationsByIdInvitesAcceptData,
  PostApiOrganizationsByIdInvitesAcceptErrors,
  PostApiOrganizationsByIdInvitesAcceptResponses,
  PostApiOrganizationsData,
  PostApiOrganizationsErrors,
  PostApiOrganizationsInvitesSendByEmailData,
  PostApiOrganizationsInvitesSendByEmailErrors,
  PostApiOrganizationsInvitesSendByEmailResponses,
  PostApiOrganizationsResponses,
  PostApiProductsData,
  PostApiProductsErrors,
  PostApiProductsResponses,
  PostApiRolesData,
  PostApiRolesErrors,
  PostApiRolesResponses,
  PostApiTransactionsData,
  PostApiTransactionsErrors,
  PostApiTransactionsResponses,
  PostApiUsersData,
  PostApiUsersErrors,
  PostApiUsersResponses,
  PutApiMaterialsByIdData,
  PutApiMaterialsByIdErrors,
  PutApiMaterialsByIdResponses,
  PutApiNotificationsByIdData,
  PutApiNotificationsByIdErrors,
  PutApiNotificationsByIdResponses,
  PutApiOrganizationsByIdData,
  PutApiOrganizationsByIdErrors,
  PutApiOrganizationsByIdResponses,
  PutApiProductsByIdData,
  PutApiProductsByIdErrors,
  PutApiProductsByIdResponses,
  PutApiRolesByIdData,
  PutApiRolesByIdErrors,
  PutApiRolesByIdResponses,
  PutApiTransactionsByIdData,
  PutApiTransactionsByIdErrors,
  PutApiTransactionsByIdResponses,
  PutApiUsersByIdData,
  PutApiUsersByIdErrors,
  PutApiUsersByIdResponses,
} from './types.gen';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * View AuditLogs
 * Endpoint to retrieve a list of auditlogs with pagination and optional search query
 */
export const getApiAuditlogs = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiAuditlogsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuditlogsResponses,
    GetApiAuditlogsErrors,
    ThrowOnError
  >({
    url: '/api/auditlogs',
    ...options,
  });
};

/**
 * View AuditLog
 * Endpoint to retrieve a auditlog by their ID
 */
export const getApiAuditlogsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiAuditlogsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiAuditlogsByIdResponses,
    GetApiAuditlogsByIdErrors,
    ThrowOnError
  >({
    url: '/api/auditlogs/{id}',
    ...options,
  });
};

/**
 * Check Authentication
 * Checks if the user is authenticated and returns their user information.
 */
export const getApiAuthenticationCheck = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiAuthenticationCheckData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationCheckResponses,
    GetApiAuthenticationCheckErrors,
    ThrowOnError
  >({
    url: '/api/authentication/check',
    ...options,
  });
};

/**
 * Login
 * Logs in a user with email and password.
 */
export const postApiAuthenticationLogin = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiAuthenticationLoginData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiAuthenticationLoginResponses,
    PostApiAuthenticationLoginErrors,
    ThrowOnError
  >({
    url: '/api/authentication/login',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Logout
 * Logs out the user and invalidates their session.
 */
export const postApiAuthenticationLogout = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationLogoutData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationLogoutResponses,
    PostApiAuthenticationLogoutErrors,
    ThrowOnError
  >({
    url: '/api/authentication/logout',
    ...options,
  });
};

/**
 * Enable Multi-Factor Authentication (MFA)
 * Generates a QR code for enabling Multi-Factor Authentication (MFA) for the user.
 */
export const getApiAuthenticationMfaEnable = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiAuthenticationMfaEnableData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationMfaEnableResponses,
    GetApiAuthenticationMfaEnableErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/enable',
    ...options,
  });
};

/**
 * Verify Multi-Factor Authentication (MFA)
 * Verifies the user's MFA status.
 */
export const postApiAuthenticationMfaVerify = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiAuthenticationMfaVerifyData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiAuthenticationMfaVerifyResponses,
    PostApiAuthenticationMfaVerifyErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/verify',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Organizations
 * Return the user's organizations.
 */
export const getApiAuthenticationOrganizations = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiAuthenticationOrganizationsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationOrganizationsResponses,
    GetApiAuthenticationOrganizationsErrors,
    ThrowOnError
  >({
    url: '/api/authentication/organizations',
    ...options,
  });
};

/**
 * Permissions
 * Return the user's permissions.
 */
export const getApiAuthenticationPermissions = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiAuthenticationPermissionsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationPermissionsResponses,
    GetApiAuthenticationPermissionsErrors,
    ThrowOnError
  >({
    url: '/api/authentication/permissions',
    ...options,
  });
};

/**
 * Sign Up
 * Signs up a new user with email and password.
 */
export const postApiAuthenticationSignUp = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiAuthenticationSignUpData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiAuthenticationSignUpResponses,
    PostApiAuthenticationSignUpErrors,
    ThrowOnError
  >({
    url: '/api/authentication/sign-up',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * View Collections
 * Endpoint to retrieve a list of collections with pagination and optional search query
 */
export const getApiCollections = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiCollectionsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiCollectionsResponses,
    GetApiCollectionsErrors,
    ThrowOnError
  >({
    url: '/api/collections',
    ...options,
  });
};

/**
 * View Materials
 * Endpoint to retrieve a list of materials with pagination and optional search query
 */
export const getApiMaterials = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiMaterialsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiMaterialsResponses,
    GetApiMaterialsErrors,
    ThrowOnError
  >({
    url: '/api/materials',
    ...options,
  });
};

/**
 * Create Material
 * Creates a new material.
 */
export const postApiMaterials = <ThrowOnError extends boolean = false>(
  options: Options<PostApiMaterialsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiMaterialsResponses,
    PostApiMaterialsErrors,
    ThrowOnError
  >({
    url: '/api/materials',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Material by ID
 * Deletes a material by by their id.
 */
export const deleteApiMaterialsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiMaterialsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiMaterialsByIdResponses,
    DeleteApiMaterialsByIdErrors,
    ThrowOnError
  >({
    url: '/api/materials/{id}',
    ...options,
  });
};

/**
 * View Material
 * Endpoint to retrieve a material by their ID
 */
export const getApiMaterialsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiMaterialsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiMaterialsByIdResponses,
    GetApiMaterialsByIdErrors,
    ThrowOnError
  >({
    url: '/api/materials/{id}',
    ...options,
  });
};

/**
 * Update Material by ID
 * Updates the material information for a specific material identified by their id.
 */
export const putApiMaterialsById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiMaterialsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiMaterialsByIdResponses,
    PutApiMaterialsByIdErrors,
    ThrowOnError
  >({
    url: '/api/materials/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * View Notifications
 * Endpoint to retrieve a list of notifications with pagination and optional search query
 */
export const getApiNotifications = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiNotificationsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiNotificationsResponses,
    GetApiNotificationsErrors,
    ThrowOnError
  >({
    url: '/api/notifications',
    ...options,
  });
};

/**
 * Create Notification
 * Creates a new notification.
 */
export const postApiNotifications = <ThrowOnError extends boolean = false>(
  options: Options<PostApiNotificationsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiNotificationsResponses,
    PostApiNotificationsErrors,
    ThrowOnError
  >({
    url: '/api/notifications',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Notification by ID
 * Deletes a notification by by their id.
 */
export const deleteApiNotificationsById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteApiNotificationsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiNotificationsByIdResponses,
    DeleteApiNotificationsByIdErrors,
    ThrowOnError
  >({
    url: '/api/notifications/{id}',
    ...options,
  });
};

/**
 * View Notification
 * Endpoint to retrieve a notification by their ID
 */
export const getApiNotificationsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiNotificationsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiNotificationsByIdResponses,
    GetApiNotificationsByIdErrors,
    ThrowOnError
  >({
    url: '/api/notifications/{id}',
    ...options,
  });
};

/**
 * Update Notification by ID
 * Updates the notification information for a specific notification identified by their id.
 */
export const putApiNotificationsById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiNotificationsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiNotificationsByIdResponses,
    PutApiNotificationsByIdErrors,
    ThrowOnError
  >({
    url: '/api/notifications/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * View Organizations
 * Endpoint to retrieve a list of organizations with pagination and optional search query
 */
export const getApiOrganizations = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiOrganizationsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiOrganizationsResponses,
    GetApiOrganizationsErrors,
    ThrowOnError
  >({
    url: '/api/organizations',
    ...options,
  });
};

/**
 * Create Organization
 * Creates a new organization.
 */
export const postApiOrganizations = <ThrowOnError extends boolean = false>(
  options: Options<PostApiOrganizationsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiOrganizationsResponses,
    PostApiOrganizationsErrors,
    ThrowOnError
  >({
    url: '/api/organizations',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Send Organization Invite
 * Sends an invitation to join the organization.
 */
export const postApiOrganizationsInvitesSendByEmail = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiOrganizationsInvitesSendByEmailData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiOrganizationsInvitesSendByEmailResponses,
    PostApiOrganizationsInvitesSendByEmailErrors,
    ThrowOnError
  >({
    url: '/api/organizations/invites/send/{email}',
    ...options,
  });
};

/**
 * Remove User by ID
 * Removes a user by their id.
 */
export const deleteApiOrganizationsUsersById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteApiOrganizationsUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiOrganizationsUsersByIdResponses,
    DeleteApiOrganizationsUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/organizations/users/{id}',
    ...options,
  });
};

/**
 * Delete Organization by ID
 * Deletes a organization by by their id.
 */
export const deleteApiOrganizationsById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteApiOrganizationsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiOrganizationsByIdResponses,
    DeleteApiOrganizationsByIdErrors,
    ThrowOnError
  >({
    url: '/api/organizations/{id}',
    ...options,
  });
};

/**
 * View Organization
 * Endpoint to retrieve a organization by their ID
 */
export const getApiOrganizationsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiOrganizationsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiOrganizationsByIdResponses,
    GetApiOrganizationsByIdErrors,
    ThrowOnError
  >({
    url: '/api/organizations/{id}',
    ...options,
  });
};

/**
 * Update Organization by ID
 * Updates the organization information for a specific organization identified by their id.
 */
export const putApiOrganizationsById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiOrganizationsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiOrganizationsByIdResponses,
    PutApiOrganizationsByIdErrors,
    ThrowOnError
  >({
    url: '/api/organizations/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Accept Organization Invite
 * Accepts an invitation to join the organization.
 */
export const postApiOrganizationsByIdInvitesAccept = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiOrganizationsByIdInvitesAcceptData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiOrganizationsByIdInvitesAcceptResponses,
    PostApiOrganizationsByIdInvitesAcceptErrors,
    ThrowOnError
  >({
    url: '/api/organizations/{id}/invites/accept',
    ...options,
  });
};

/**
 * View Products
 * Endpoint to retrieve a list of products with pagination and optional search query
 */
export const getApiProducts = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiProductsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiProductsResponses,
    GetApiProductsErrors,
    ThrowOnError
  >({
    url: '/api/products',
    ...options,
  });
};

/**
 * Create Product
 * Creates a new product.
 */
export const postApiProducts = <ThrowOnError extends boolean = false>(
  options: Options<PostApiProductsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiProductsResponses,
    PostApiProductsErrors,
    ThrowOnError
  >({
    url: '/api/products',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Product by ID
 * Deletes a product by by their id.
 */
export const deleteApiProductsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiProductsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiProductsByIdResponses,
    DeleteApiProductsByIdErrors,
    ThrowOnError
  >({
    url: '/api/products/{id}',
    ...options,
  });
};

/**
 * View Product
 * Endpoint to retrieve a product by their ID
 */
export const getApiProductsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiProductsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiProductsByIdResponses,
    GetApiProductsByIdErrors,
    ThrowOnError
  >({
    url: '/api/products/{id}',
    ...options,
  });
};

/**
 * Update Product by ID
 * Updates the product information for a specific product identified by their id.
 */
export const putApiProductsById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiProductsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiProductsByIdResponses,
    PutApiProductsByIdErrors,
    ThrowOnError
  >({
    url: '/api/products/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * View Roles
 * Endpoint to retrieve a list of roles with pagination and optional search query
 */
export const getApiRoles = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiRolesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiRolesResponses,
    GetApiRolesErrors,
    ThrowOnError
  >({
    url: '/api/roles',
    ...options,
  });
};

/**
 * Create Role
 * Creates a new role.
 */
export const postApiRoles = <ThrowOnError extends boolean = false>(
  options: Options<PostApiRolesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiRolesResponses,
    PostApiRolesErrors,
    ThrowOnError
  >({
    url: '/api/roles',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Available Permissions
 * Return the available permissions for roles.
 */
export const getApiRolesAvailablePermissions = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiRolesAvailablePermissionsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiRolesAvailablePermissionsResponses,
    GetApiRolesAvailablePermissionsErrors,
    ThrowOnError
  >({
    url: '/api/roles/available-permissions',
    ...options,
  });
};

/**
 * Delete Role by ID
 * Deletes a role by by their id.
 */
export const deleteApiRolesById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiRolesByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiRolesByIdResponses,
    DeleteApiRolesByIdErrors,
    ThrowOnError
  >({
    url: '/api/roles/{id}',
    ...options,
  });
};

/**
 * View Role
 * Endpoint to retrieve a role by their ID
 */
export const getApiRolesById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiRolesByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiRolesByIdResponses,
    GetApiRolesByIdErrors,
    ThrowOnError
  >({
    url: '/api/roles/{id}',
    ...options,
  });
};

/**
 * Update Role by ID
 * Updates the role information for a specific role identified by their id.
 */
export const putApiRolesById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiRolesByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiRolesByIdResponses,
    PutApiRolesByIdErrors,
    ThrowOnError
  >({
    url: '/api/roles/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * View Transactions
 * Endpoint to retrieve a list of transactions with pagination and optional search query
 */
export const getApiTransactions = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiTransactionsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiTransactionsResponses,
    GetApiTransactionsErrors,
    ThrowOnError
  >({
    url: '/api/transactions',
    ...options,
  });
};

/**
 * Create Transaction
 * Creates a new transaction.
 */
export const postApiTransactions = <ThrowOnError extends boolean = false>(
  options: Options<PostApiTransactionsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiTransactionsResponses,
    PostApiTransactionsErrors,
    ThrowOnError
  >({
    url: '/api/transactions',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete Transaction by ID
 * Deletes a transaction by by their id.
 */
export const deleteApiTransactionsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiTransactionsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiTransactionsByIdResponses,
    DeleteApiTransactionsByIdErrors,
    ThrowOnError
  >({
    url: '/api/transactions/{id}',
    ...options,
  });
};

/**
 * View Transaction
 * Endpoint to retrieve a transaction by their ID
 */
export const getApiTransactionsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiTransactionsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiTransactionsByIdResponses,
    GetApiTransactionsByIdErrors,
    ThrowOnError
  >({
    url: '/api/transactions/{id}',
    ...options,
  });
};

/**
 * Update Transaction by ID
 * Updates the transaction information for a specific transaction identified by their id.
 */
export const putApiTransactionsById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiTransactionsByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiTransactionsByIdResponses,
    PutApiTransactionsByIdErrors,
    ThrowOnError
  >({
    url: '/api/transactions/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * View Users
 * Endpoint to retrieve a list of users with pagination and optional search query
 */
export const getApiUsers = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiUsersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiUsersResponses,
    GetApiUsersErrors,
    ThrowOnError
  >({
    url: '/api/users',
    ...options,
  });
};

/**
 * Create User
 * Creates a new user.
 */
export const postApiUsers = <ThrowOnError extends boolean = false>(
  options: Options<PostApiUsersData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    PostApiUsersResponses,
    PostApiUsersErrors,
    ThrowOnError
  >({
    url: '/api/users',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Delete User by ID
 * Deletes a user by by their id.
 */
export const deleteApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiUsersByIdResponses,
    DeleteApiUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/users/{id}',
    ...options,
  });
};

/**
 * View User
 * Endpoint to retrieve a user by their ID
 */
export const getApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiUsersByIdResponses,
    GetApiUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/users/{id}',
    ...options,
  });
};

/**
 * Update User by ID
 * Updates the user information for a specific user identified by their id.
 */
export const putApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiUsersByIdResponses,
    PutApiUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/users/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};
